<mah:MetroWindow
    x:Class="Device_Interface_Manager.Views.OutputCreatorView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:Device_Interface_Manager.Views"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:viewmodel="clr-namespace:Device_Interface_Manager.ViewModels"
    xmlns:model="clr-namespace:Device_Interface_Manager.Models"
    xmlns:core="clr-namespace:Device_Interface_Manager.Core"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
    d:DataContext="{d:DesignInstance Type=viewmodel:OutputCreatorViewModel}"
    WindowStartupLocation="CenterOwner"
    mc:Ignorable="d"
    Background="#1B1A24"
    Title="Output Creator"
    TitleAlignment="Center"
    TitleCharacterCasing="Normal"
    SizeToContent="WidthAndHeight"
    ResizeMode="NoResize">

    <mah:MetroWindow.Resources>
        <core:StringToBooleanConverter x:Key="StringToBooleanConverter"/>
    </mah:MetroWindow.Resources>

    <Grid>

        <Grid Margin="10,10,10,75">

            <mah:MetroTabControl Background="Transparent">

                <TabItem Header="Output" Cursor="Hand">

                    <StackPanel Margin="20,20,20,20" HorizontalAlignment="Center" Width="400" Cursor="Arrow">
                        
                        <StackPanel  Orientation="Horizontal" HorizontalAlignment="Center">
                            <RadioButton Content="SimVar / L:Var"
                                         Cursor="Hand"
                                         Background="Transparent"
                                         IsChecked="{Binding Path=DataType, Mode=TwoWay, Converter={StaticResource StringToBooleanConverter}, ConverterParameter={x:Static model:ProfileCreatorModel.MSFSSimConnect}}"/>
                            <RadioButton Content="PMDG 737"
                                         Cursor="Hand"
                                         Background="Transparent"
                                         Margin="25,0,0,0"
                                         IsChecked="{Binding Path=DataType, Mode=TwoWay, Converter={StaticResource StringToBooleanConverter}, ConverterParameter={x:Static model:ProfileCreatorModel.PMDG737}}"/>
                        </StackPanel>

                        <Grid Margin="0,25,0,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="2*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <TextBlock Grid.Row="1" Text="Output Type" Foreground="White" VerticalAlignment="Center"/>
                            <TextBlock Grid.Column="1" d:Text="TEST" Foreground="White" Margin="0,0,0,5" Text="{Binding OutputType}" HorizontalAlignment="Center"/>
                            <ComboBox
                                Grid.Row="1"
                                Grid.Column="1"
                                ItemsSource="{Binding OutputTypes}"
                                SelectedItem="{Binding OutputType, UpdateSourceTrigger=PropertyChanged}">
                                <ComboBox.ItemContainerStyle>
                                    <Style TargetType="ComboBoxItem">
                                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                    </Style>
                                </ComboBox.ItemContainerStyle>
                            </ComboBox>
                        </Grid>

                        <Grid Margin="0,25,0,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="2*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <TextBlock Grid.Row="1" Text="Output" Foreground="White" VerticalAlignment="Center"/>
                            <TextBlock Grid.Column="1" d:Text="TEST" Foreground="White" Margin="0,0,0,5" Text="{Binding Output.Value}" HorizontalAlignment="Center"/>
                            <ComboBox
                                Grid.Row="1"
                                Grid.Column="1"
                                mah:TextBoxHelper.ClearTextButton="True"
                                SelectedItem="{Binding Output, UpdateSourceTrigger=PropertyChanged}"
                                DisplayMemberPath="Value"
                                ToolTip="{Binding Output.Key}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseMove">
                                        <i:InvokeCommandAction Command="{Binding MouseMoveComboBoxCommand}" PassEventArgsToCommand="True"/>
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="MouseLeave">
                                        <i:InvokeCommandAction Command="{Binding MouseLeaveComboBoxCommand}" PassEventArgsToCommand="True"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <ComboBox.ItemContainerStyle>
                                    <Style TargetType="ComboBoxItem">
                                        <Setter Property="ToolTip" Value="{Binding Key}"/>
                                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                    </Style>
                                </ComboBox.ItemContainerStyle>
                                <ComboBox.Style>
                                    <Style TargetType="ComboBox" BasedOn="{StaticResource MahApps.Styles.ComboBox}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding OutputType}" Value="LED">
                                                <Setter Property="ItemsSource" Value="{Binding LEDs}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding OutputType}" Value="Dataline">
                                                <Setter Property="ItemsSource" Value="{Binding Datalines}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding OutputType}" Value="7 Segment">
                                                <Setter Property="ItemsSource" Value="{Binding SevenSegments}"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ComboBox.Style>
                            </ComboBox>
                        </Grid>

                        <Grid d:Visibility="Visible" Margin="0,25,0,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="2*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <TextBlock Grid.Row="1" Text="PMDG Data" Foreground="White" VerticalAlignment="Center"/>
                            <TextBlock Grid.Column="1" d:Text="TEST" Foreground="White" Margin="0,0,0,5" Text="{Binding PMDGData}" HorizontalAlignment="Center"/>
                            <ComboBox
                                Grid.Row="1"
                                Grid.Column="1"
                                IsEditable="True"
                                IsTextSearchEnabled="False"
                                mah:TextBoxHelper.ClearTextButton="True"
                                mah:TextBoxHelper.Watermark="Search..."
                                Text="{Binding SearchPMDGData, UpdateSourceTrigger=PropertyChanged}"
                                SelectedItem="{Binding PMDGData, UpdateSourceTrigger=PropertyChanged}"
                                ItemsSource="{Binding PMDGDataArray}"
                                VirtualizingPanel.IsVirtualizing="True">
                                <ComboBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <VirtualizingStackPanel/>
                                    </ItemsPanelTemplate>
                                </ComboBox.ItemsPanel>
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="GotFocus">
                                        <i:InvokeCommandAction Command="{Binding ComboboxMouseEnterLeaveCommand}" PassEventArgsToCommand="True"/>
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="LostFocus">
                                        <i:InvokeCommandAction Command="{Binding ComboboxMouseEnterLeaveCommand}" PassEventArgsToCommand="True"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </ComboBox>
                            <Grid.Style>
                                <Style TargetType="Grid">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding DataType}" Value="PMDG737">
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Grid.Style>
                        </Grid>

                        <Grid d:Visibility="Visible" Margin="0,25,0,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="2*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <TextBlock Grid.Row="1" Text="PMDG Array Index" Foreground="White" VerticalAlignment="Center"/>
                            <TextBlock Grid.Column="1" d:Text="TEST" Foreground="White" Margin="0,0,0,5" Text="{Binding PMDGDataArrayIndex}" HorizontalAlignment="Center"/>
                            <ComboBox
                                Grid.Row="1"
                                Grid.Column="1"
                                SelectedItem="{Binding PMDGDataArrayIndex, UpdateSourceTrigger=PropertyChanged}"
                                ItemsSource="{Binding PMDGDataArrayIndices}">
                            </ComboBox>
                            <Grid.Style>
                                <Style TargetType="Grid">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding DataType}" Value="PMDG737">
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding PMDGDataArrayIndex}" Value="{x:Null}">
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Grid.Style>
                        </Grid>

                        <Grid d:Visibility="Visible" Margin="0,20,0,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="2*"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="Data" Foreground="White" VerticalAlignment="Center"/>
                            <TextBox 
                                Grid.Column="1"
                                Text="{Binding Data, TargetNullValue='', UpdateSourceTrigger=PropertyChanged}"
                                mah:TextBoxHelper.Watermark="SimVar / L:Var"
                                mah:TextBoxHelper.ClearTextButton="True">
                            </TextBox>
                            <Grid.Style>
                                <Style TargetType="Grid">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding DataType}" Value="MSFS/SimConnect/LVar">
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Grid.Style>
                        </Grid>

                        <Grid d:Visibility="Visible" Margin="0,20,0,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="2*"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="Unit" Foreground="White" VerticalAlignment="Center"/>
                            <TextBox 
                                Grid.Column="1"
                                Text="{Binding Unit, TargetNullValue='', UpdateSourceTrigger=PropertyChanged}"
                                mah:TextBoxHelper.Watermark="Unit"
                                mah:TextBoxHelper.ClearTextButton="True">
                            </TextBox>
                            <Grid.Style>
                                <Style TargetType="Grid">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding DataType}" Value="MSFS/SimConnect/LVar">
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Grid.Style>
                        </Grid>

                        <Grid d:Visibility="Visible" Margin="0,20,0,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="2*"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="Invert" Foreground="White" VerticalAlignment="Center"/>
                            <CheckBox
                                Grid.Column="1"
                                Cursor="Hand"
                                HorizontalAlignment="Left"
                                IsChecked="{Binding IsInverted, UpdateSourceTrigger=PropertyChanged}" 
                                mah:CheckBoxHelper.CheckGlyphForegroundChecked="White"
                                mah:CheckBoxHelper.CheckGlyphForegroundCheckedPressed="Gray"
                                mah:CheckBoxHelper.CheckGlyphForegroundCheckedMouseOver="Gray">
                            </CheckBox>
                            <Grid.Style>
                                <Style TargetType="Grid">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsComparisonEnabled}" Value="True">
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding OutputType}" Value="LED">
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding OutputType}" Value="Dataline">
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Grid.Style>
                        </Grid>

                    </StackPanel>

                </TabItem>

                <TabItem Header="Comparison" d:Visibility="Visible" Cursor="Hand">

                    <StackPanel Margin="20,20,20,20" Width="400" Cursor="Arrow">

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="0.5*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="Operator" Foreground="White" VerticalAlignment="Center"/>
                            <ComboBox
                                Grid.Column="1"
                                mah:TextBoxHelper.ClearTextButton="True"
                                HorizontalAlignment="Left"
                                FontWeight="Bold"
                                FontSize="20"
                                Width="80"
                                HorizontalContentAlignment="Center"
                                SelectedItem="{Binding Operator, UpdateSourceTrigger=PropertyChanged}"
                                ItemsSource="{Binding Operators}">
                                <ComboBox.ItemContainerStyle>
                                    <Style TargetType="ComboBoxItem" BasedOn="{StaticResource MahApps.Styles.ComboBoxItem}">
                                        <Setter Property="HorizontalContentAlignment" Value="Center" />
                                    </Style>
                                </ComboBox.ItemContainerStyle>
                            </ComboBox>
                        </Grid>

                        <Grid Margin="0,20,0,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="2*"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="Comparison Value" Foreground="White" VerticalAlignment="Center"/>
                            <TextBox
                                Grid.Column="1"
                                Text="{Binding ComparisonValue, TargetNullValue='', UpdateSourceTrigger=PropertyChanged}"
                                mah:TextBoxHelper.Watermark="Comparison Value"
                                mah:TextBoxHelper.ClearTextButton="True">
                            </TextBox>
                        </Grid>

                        <Grid Margin="0,20,0,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="2*"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="True Value" Foreground="White" VerticalAlignment="Center"/>
                            <TextBox
                                IsEnabled="False"
                                Grid.Column="1"
                                Text="{Binding TrueValue, TargetNullValue='', UpdateSourceTrigger=PropertyChanged}"
                                mah:TextBoxHelper.Watermark="True Value"
                                mah:TextBoxHelper.ClearTextButton="True">
                            </TextBox>
                        </Grid>

                        <Grid Margin="0,20,0,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="2*"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="False Value" Foreground="White" VerticalAlignment="Center"/>
                            <TextBox
                                IsEnabled="False"
                                Grid.Column="1"
                                Text="{Binding FalseValue, TargetNullValue='', UpdateSourceTrigger=PropertyChanged}"
                                mah:TextBoxHelper.Watermark="False Value"
                                mah:TextBoxHelper.ClearTextButton="True">
                            </TextBox>
                        </Grid>

                    </StackPanel>

                    <TabItem.Style>
                        <Style TargetType="TabItem" BasedOn="{StaticResource MahApps.Styles.TabItem}">
                            <Setter Property="Visibility" Value="Visible"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding OutputType}" Value="7 Segment">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TabItem.Style>

                </TabItem>


                <TabItem Header="Display" d:Visibility="Visible" Cursor="Hand">

                    <StackPanel Margin="20,20,20,20" Width="400" Cursor="Arrow">

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="2*"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="Left Padding" Foreground="White" VerticalAlignment="Center"/>
                            <CheckBox
                                    Grid.Column="1"
                                    IsChecked="{Binding IsPadded, UpdateSourceTrigger=PropertyChanged}" 
                                    mah:CheckBoxHelper.CheckGlyphForegroundChecked="White"
                                    mah:CheckBoxHelper.CheckGlyphForegroundCheckedPressed="Gray"
                                    mah:CheckBoxHelper.CheckGlyphForegroundCheckedMouseOver="Gray">
                            </CheckBox>
                        </Grid>

                        <Grid Margin="0,20,0,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="2*"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="Padding Character" Foreground="White" VerticalAlignment="Center"/>
                            <ComboBox
                                    Grid.Column="1"
                                    DisplayMemberPath="Key"
                                    mah:TextBoxHelper.ClearTextButton="True"
                                    SelectedItem="{Binding PaddingCharacterPair, UpdateSourceTrigger=PropertyChanged}"
                                    ItemsSource="{Binding PaddingCharacters}">
                            </ComboBox>
                        </Grid>

                        <Grid Margin="0,20,0,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="2*"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="Digit Count" Foreground="White" VerticalAlignment="Center"/>
                            <ComboBox
                                    Grid.Column="1"
                                    mah:TextBoxHelper.ClearTextButton="True"
                                    SelectedItem="{Binding DigitCount, UpdateSourceTrigger=PropertyChanged}"
                                    ItemsSource="{Binding DigitCounts}">
                            </ComboBox>
                        </Grid>

                        <Grid Margin="0,20,0,0" Height="70">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="2*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <TextBlock Text="Digit" Foreground="White" VerticalAlignment="Top" Height="18"/>
                            <TextBlock Grid.Row="1" Text="Decimal Point" Foreground="White" VerticalAlignment="Top" Height="18"/>
                            <ListView
                                    Grid.Column="1"
                                    Grid.RowSpan="2"
                                    ItemsSource="{Binding Digits}"
                                    d:ItemsSource="{d:SampleData ItemCount=8}"
                                    Background="Transparent">
                                <ListView.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel Orientation="Horizontal"/>
                                    </ItemsPanelTemplate>
                                </ListView.ItemsPanel>
                                <ListView.ItemTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Vertical" Margin="0,0,10,0" Width="18">
                                            <CheckBox
                                                    IsChecked="{Binding IsDigitChecked}"
                                                    mah:CheckBoxHelper.CheckGlyphForegroundChecked="White"
                                                    mah:CheckBoxHelper.CheckGlyphForegroundCheckedPressed="Gray"
                                                    mah:CheckBoxHelper.CheckGlyphForegroundCheckedMouseOver="Gray"/>
                                            <TextBlock d:Text="8" Text="{Binding Digit}" HorizontalAlignment="Center"/>
                                            <CheckBox
                                                    IsChecked="{Binding IsDecimalPointChecked}"
                                                    mah:CheckBoxHelper.CheckGlyphForegroundChecked="White"
                                                    mah:CheckBoxHelper.CheckGlyphForegroundCheckedPressed="Gray"
                                                    mah:CheckBoxHelper.CheckGlyphForegroundCheckedMouseOver="Gray"/>
                                        </StackPanel>
                                    </DataTemplate>
                                </ListView.ItemTemplate>
                                <ListView.ItemContainerStyle>
                                    <Style TargetType="ListViewItem" BasedOn="{StaticResource MahApps.Styles.ListBoxItem}">
                                        <Setter Property="Padding" Value="0"/>
                                        <Setter Property="IsTabStop" Value="False"/>
                                        <Setter Property="Background" Value="Transparent"/>
                                        <Setter Property="mah:ItemHelper.SelectedBackgroundBrush" Value="Transparent"/>
                                        <Setter Property="mah:ItemHelper.ActiveSelectionBackgroundBrush" Value="Transparent"/>
                                        <Setter Property="mah:ItemHelper.HoverBackgroundBrush" Value="Transparent"/>
                                        <Setter Property="mah:ItemHelper.HoverSelectedBackgroundBrush" Value="Transparent"/>
                                    </Style>
                                </ListView.ItemContainerStyle>
                            </ListView>
                        </Grid>

                        <Grid Margin="0,20,0,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="2*"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="Substring Start" Foreground="White" VerticalAlignment="Center"/>
                            <TextBox
                                    Grid.Column="1"
                                    Text="{Binding SubstringStart, TargetNullValue='', UpdateSourceTrigger=PropertyChanged}"
                                    mah:TextBoxHelper.Watermark="Number 0 - 255"
                                    mah:TextBoxHelper.ClearTextButton="True">
                            </TextBox>
                        </Grid>

                        <Grid Margin="0,20,0,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="2*"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="Substring End" Foreground="White" VerticalAlignment="Center"/>
                            <TextBox
                                    Grid.Column="1"
                                    Text="{Binding SubstringEnd, TargetNullValue='', UpdateSourceTrigger=PropertyChanged}"
                                    mah:TextBoxHelper.Watermark="Number 0 - 255"
                                    mah:TextBoxHelper.ClearTextButton="True">
                            </TextBox>
                        </Grid>

                    </StackPanel>

                    <TabItem.Style>
                        <Style TargetType="TabItem" BasedOn="{StaticResource MahApps.Styles.TabItem}">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding OutputType}" Value="7 Segment">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TabItem.Style>

                </TabItem>

                <TabItem Header="Precondition" Cursor="Hand">
                    <local:PreconditionView Cursor="Arrow"/>
                    <TabItem.Style>
                        <Style TargetType="TabItem" BasedOn="{StaticResource MahApps.Styles.TabItem}">
                            <Setter Property="Visibility" Value="Visible"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding OutputCreator.Count}" Value="0">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TabItem.Style>
                </TabItem>

            </mah:MetroTabControl>

        </Grid>

        <Button Content="OK" Command="{Binding OkCommand}" Margin="0,0,0,25" Width="100" VerticalAlignment="Bottom" Cursor="Hand"/>

    </Grid>

</mah:MetroWindow>