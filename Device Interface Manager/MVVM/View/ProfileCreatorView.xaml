<mah:MetroWindow
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:viewmodel="clr-namespace:Device_Interface_Manager.MVVM.ViewModel"
    xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
    xmlns:Dialog="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
    xmlns:dd="clr-namespace:GongSolutions.Wpf.DragDrop;assembly=GongSolutions.Wpf.DragDrop"
    x:Class="Device_Interface_Manager.MVVM.View.ProfileCreatorView"
    Dialog:DialogParticipation.Register="{Binding}"
    d:DataContext="{d:DesignInstance Type={x:Type viewmodel:ProfileCreatorViewModel}}"
    Title="Profile Creator"
    TitleCharacterCasing="Normal"
    SaveWindowPosition="True"
    mc:Ignorable="d"
    Background="#1B1A24"
    Height="600"
    MinHeight="600"
    Width="1615"
    MinWidth="1000">

    <Grid VerticalAlignment="Top" HorizontalAlignment="Left">

        <Grid.Resources>
            <Style TargetType="DataGrid" BasedOn="{StaticResource MahApps.Styles.DataGrid}">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsStarted}" Value="True">
                        <Setter Property="IsHitTestVisible" Value="False"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Grid.Resources>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Grid Margin="25,10,0,0" HorizontalAlignment="Left">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <StackPanel Grid.Row="1" Margin="0" Orientation="Horizontal">
                <StackPanel.Resources>
                    <Style x:Key="ButtonIcon" TargetType="Button" BasedOn="{StaticResource MahApps.Styles.Button}">
                        <Setter Property="Margin" Value="10,0,0,0"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="Focusable" Value="False"/>
                        <Setter Property="Padding" Value="0"/>
                    </Style>
                </StackPanel.Resources>
                <Button Margin="0" Command="{Binding LoadProfileCommand}">
                    <Viewbox Width="48" Height="48">
                        <Canvas Height="24" Width="24">
                            <Path  Fill="White" Data="M6.1,10L4,18V8H21A2,2 0 0,0 19,6H12L10,4H4A2,2 0 0,0 2,6V18A2,2 0 0,0 4,20H19C19.9,20 20.7,19.4 20.9,18.5L23.2,10H6.1M19,18H6L7.6,12H20.6L19,18Z"/>
                        </Canvas>
                    </Viewbox>
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource ButtonIcon}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsStarted}" Value="True">
                                    <Setter Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Button Command="{Binding SaveProfileCommand}">
                    <Viewbox Width="48" Height="48">
                        <Canvas Height="24" Width="24">
                            <Path Fill="White" Data="M17 3H5C3.89 3 3 3.9 3 5V19C3 20.1 3.89 21 5 21H19C20.1 21 21 20.1 21 19V7L17 3M19 19H5V5H16.17L19 7.83V19M12 12C10.34 12 9 13.34 9 15S10.34 18 12 18 15 16.66 15 15 13.66 12 12 12M6 6H15V10H6V6Z"/>
                        </Canvas>
                    </Viewbox>
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource ButtonIcon}">
                            <Setter Property="IsEnabled" Value="True"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ProfileNameButtonContent}" Value="Ok">
                                    <Setter Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Device.Key}" Value="{x:Null}">
                                    <Setter Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Button Command="{Binding SaveProfileAsCommand}">
                    <Viewbox Width="48" Height="48">
                        <Canvas Height="24" Width="24">
                            <Path Fill="White" Data="M4 19H10V21H4C2.89 21 2 20.1 2 19V5C2 3.9 2.89 3 4 3H16L20 7V9.12L18 11.12V7.83L15.17 5H4V19M14 10V6H5V10H14M20.42 12.3C20.31 12.19 20.18 12.13 20.04 12.13C19.9 12.13 19.76 12.19 19.65 12.3L18.65 13.3L20.7 15.35L21.7 14.35C21.92 14.14 21.92 13.79 21.7 13.58L20.42 12.3M12 19.94V22H14.06L20.12 15.93L18.07 13.88L12 19.94M14 15C14 13.34 12.66 12 11 12S8 13.34 8 15 9.34 18 11 18C11.04 18 11.08 18 11.13 18L14 15.13C14 15.09 14 15.05 14 15"/>
                        </Canvas>
                    </Viewbox>
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource ButtonIcon}">
                            <Setter Property="IsEnabled" Value="True"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Device.Key}" Value="{x:Null}">
                                    <Setter Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Button Command="{Binding SortInputOutputCommand}">
                    <Viewbox Width="48" Height="48">
                        <Canvas Height="24" Width="24">
                            <Path  Fill="White">
                                <Path.Style>
                                    <Style TargetType="Path">
                                        <Setter Property="Data" Value="M7.78,7C9.08,7.04 10,7.53 10.57,8.46C11.13,9.4 11.41,10.56 11.39,11.95C11.4,13.5 11.09,14.73 10.5,15.62C9.88,16.5 8.95,16.97 7.71,17C6.45,16.96 5.54,16.5 4.96,15.56C4.38,14.63 4.09,13.45 4.09,12C4.09,10.55 4.39,9.36 5,8.44C5.59,7.5 6.5,7.04 7.78,7M7.75,8.63C7.31,8.63 6.96,8.9 6.7,9.46C6.44,10 6.32,10.87 6.32,12C6.31,13.15 6.44,14 6.69,14.54C6.95,15.1 7.31,15.37 7.77,15.37C8.69,15.37 9.16,14.24 9.17,12C9.17,9.77 8.7,8.65 7.75,8.63M13.33,17V15.22L13.76,15.24L14.3,15.22L15.34,15.03C15.68,14.92 16,14.78 16.26,14.58C16.59,14.35 16.86,14.08 17.07,13.76C17.29,13.45 17.44,13.12 17.53,12.78L17.5,12.77C17.05,13.19 16.38,13.4 15.47,13.41C14.62,13.4 13.91,13.15 13.34,12.65C12.77,12.15 12.5,11.43 12.46,10.5C12.47,9.5 12.81,8.69 13.47,8.03C14.14,7.37 15,7.03 16.12,7C17.37,7.04 18.29,7.45 18.88,8.24C19.47,9 19.76,10 19.76,11.19C19.75,12.15 19.61,13 19.32,13.76C19.03,14.5 18.64,15.13 18.12,15.64C17.66,16.06 17.11,16.38 16.47,16.61C15.83,16.83 15.12,16.96 14.34,17H13.33M16.06,8.63C15.65,8.64 15.32,8.8 15.06,9.11C14.81,9.42 14.68,9.84 14.68,10.36C14.68,10.8 14.8,11.16 15.03,11.46C15.27,11.77 15.63,11.92 16.11,11.93C16.43,11.93 16.7,11.86 16.92,11.74C17.14,11.61 17.3,11.46 17.41,11.28C17.5,11.17 17.53,10.97 17.53,10.71C17.54,10.16 17.43,9.69 17.2,9.28C16.97,8.87 16.59,8.65 16.06,8.63M9.25,5L12.5,1.75L15.75,5H9.25M15.75,19L12.5,22.25L9.25,19H15.75Z"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsSortedAscending}" Value="True">
                                                <Setter Property="Data" Value="M7.78 7C9.08 7.04 10 7.53 10.57 8.46C11.13 9.4 11.41 10.56 11.39 11.95C11.4 13.5 11.09 14.73 10.5 15.62C9.88 16.5 8.95 16.97 7.71 17C6.45 16.96 5.54 16.5 4.96 15.56C4.38 14.63 4.09 13.45 4.09 12S4.39 9.36 5 8.44C5.59 7.5 6.5 7.04 7.78 7M7.75 8.63C7.31 8.63 6.96 8.9 6.7 9.46C6.44 10 6.32 10.87 6.32 12C6.31 13.15 6.44 14 6.69 14.54C6.95 15.1 7.31 15.37 7.77 15.37C8.69 15.37 9.16 14.24 9.17 12C9.17 9.77 8.7 8.65 7.75 8.63M13.33 17V15.22L13.76 15.24L14.3 15.22L15.34 15.03C15.68 14.92 16 14.78 16.26 14.58C16.59 14.35 16.86 14.08 17.07 13.76C17.29 13.45 17.44 13.12 17.53 12.78L17.5 12.77C17.05 13.19 16.38 13.4 15.47 13.41C14.62 13.4 13.91 13.15 13.34 12.65S12.5 11.43 12.46 10.5C12.47 9.5 12.81 8.69 13.47 8.03C14.14 7.37 15 7.03 16.12 7C17.37 7.04 18.29 7.45 18.88 8.24C19.47 9 19.76 10 19.76 11.19C19.75 12.15 19.61 13 19.32 13.76C19.03 14.5 18.64 15.13 18.12 15.64C17.66 16.06 17.11 16.38 16.47 16.61C15.83 16.83 15.12 16.96 14.34 17H13.33M16.06 8.63C15.65 8.64 15.32 8.8 15.06 9.11C14.81 9.42 14.68 9.84 14.68 10.36C14.68 10.8 14.8 11.16 15.03 11.46C15.27 11.77 15.63 11.92 16.11 11.93C16.43 11.93 16.7 11.86 16.92 11.74C17.14 11.61 17.3 11.46 17.41 11.28C17.5 11.17 17.53 10.97 17.53 10.71C17.54 10.16 17.43 9.69 17.2 9.28C16.97 8.87 16.59 8.65 16.06 8.63M9.25 5L12.5 1.75L15.75 5H9.25"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsSortedAscending}" Value="False">
                                                <Setter Property="Data" Value="M7.78 7C9.08 7.04 10 7.53 10.57 8.46C11.13 9.4 11.41 10.56 11.39 11.95C11.4 13.5 11.09 14.73 10.5 15.62C9.88 16.5 8.95 16.97 7.71 17C6.45 16.96 5.54 16.5 4.96 15.56C4.38 14.63 4.09 13.45 4.09 12S4.39 9.36 5 8.44C5.59 7.5 6.5 7.04 7.78 7M7.75 8.63C7.31 8.63 6.96 8.9 6.7 9.46C6.44 10 6.32 10.87 6.32 12C6.31 13.15 6.44 14 6.69 14.54C6.95 15.1 7.31 15.37 7.77 15.37C8.69 15.37 9.16 14.24 9.17 12C9.17 9.77 8.7 8.65 7.75 8.63M13.33 17V15.22L13.76 15.24L14.3 15.22L15.34 15.03C15.68 14.92 16 14.78 16.26 14.58C16.59 14.35 16.86 14.08 17.07 13.76C17.29 13.45 17.44 13.12 17.53 12.78L17.5 12.77C17.05 13.19 16.38 13.4 15.47 13.41C14.62 13.4 13.91 13.15 13.34 12.65S12.5 11.43 12.46 10.5C12.47 9.5 12.81 8.69 13.47 8.03C14.14 7.37 15 7.03 16.12 7C17.37 7.04 18.29 7.45 18.88 8.24C19.47 9 19.76 10 19.76 11.19C19.75 12.15 19.61 13 19.32 13.76C19.03 14.5 18.64 15.13 18.12 15.64C17.66 16.06 17.11 16.38 16.47 16.61C15.83 16.83 15.12 16.96 14.34 17H13.33M16.06 8.63C15.65 8.64 15.32 8.8 15.06 9.11C14.81 9.42 14.68 9.84 14.68 10.36C14.68 10.8 14.8 11.16 15.03 11.46C15.27 11.77 15.63 11.92 16.11 11.93C16.43 11.93 16.7 11.86 16.92 11.74C17.14 11.61 17.3 11.46 17.41 11.28C17.5 11.17 17.53 10.97 17.53 10.71C17.54 10.16 17.43 9.69 17.2 9.28C16.97 8.87 16.59 8.65 16.06 8.63M15.75 19L12.5 22.25L9.25 19H15.75Z"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Path.Style>
                            </Path>
                        </Canvas>
                    </Viewbox>
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource ButtonIcon}">
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <Setter Property="IsEnabled" Value="False"/>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding ProfileCreatorModel.InputCreator.Count}" Value="0"/>
                                        <Condition Binding="{Binding ProfileCreatorModel.OutputCreator.Count}" Value="0"/>
                                    </MultiDataTrigger.Conditions>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <Setter Property="IsEnabled" Value="False"/>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding ProfileCreatorModel.InputCreator.Count}" Value="0"/>
                                        <Condition Binding="{Binding ProfileCreatorModel.OutputCreator.Count}" Value="1"/>
                                    </MultiDataTrigger.Conditions>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <Setter Property="IsEnabled" Value="False"/>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding ProfileCreatorModel.InputCreator.Count}" Value="1"/>
                                        <Condition Binding="{Binding ProfileCreatorModel.OutputCreator.Count}" Value="0"/>
                                    </MultiDataTrigger.Conditions>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <Setter Property="IsEnabled" Value="False"/>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding ProfileCreatorModel.InputCreator.Count}" Value="1"/>
                                        <Condition Binding="{Binding ProfileCreatorModel.OutputCreator.Count}" Value="1"/>
                                    </MultiDataTrigger.Conditions>
                                </MultiDataTrigger>
                                <DataTrigger Binding="{Binding IsStarted}" Value="True">
                                    <Setter Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Button Command="{Binding ClearProfileCommand}">
                    <Viewbox Width="48" Height="48">
                        <Canvas Height="24" Width="24">
                            <Path  Fill="White" Data="M9,3V4H4V6H5V19A2,2 0 0,0 7,21H17A2,2 0 0,0 19,19V6H20V4H15V3H9M7,6H17V19H7V6M9,8V17H11V8H9M13,8V17H15V8H13Z"/>
                        </Canvas>
                    </Viewbox>
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource ButtonIcon}">
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <Setter Property="IsEnabled" Value="False"/>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding ProfileCreatorModel.InputCreator.Count}" Value="0"/>
                                        <Condition Binding="{Binding ProfileCreatorModel.OutputCreator.Count}" Value="0"/>
                                    </MultiDataTrigger.Conditions>
                                </MultiDataTrigger>
                                <DataTrigger Binding="{Binding IsStarted}" Value="True">
                                    <Setter Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Button d:Visibility="Visible" Command="{Binding StartProfilesCommand}">
                    <Viewbox Width="48" Height="48">
                        <Canvas Height="24" Width="24">
                            <Path>
                                <Path.Style>
                                    <Style TargetType="Path">
                                        <Setter Property="Data" Value="M8,5.14V19.14L19,12.14L8,5.14Z"/>
                                        <Setter Property="Fill" Value="LightGreen"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsStarted}" Value="True">
                                                <Setter Property="Data" Value="M18,18H6V6H18V18Z"/>
                                                <Setter Property="Fill" Value="IndianRed"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Path.Style>
                            </Path>
                        </Canvas>
                    </Viewbox>
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource ButtonIcon}">
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <Setter Property="IsEnabled" Value="False"/>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding ProfileCreatorModel.InputCreator.Count}" Value="0"/>
                                        <Condition Binding="{Binding ProfileCreatorModel.OutputCreator.Count}" Value="0"/>
                                    </MultiDataTrigger.Conditions>
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <TextBlock d:Text="Test" Text="{Binding ErrorText}" Margin="100,0,0,0" Foreground="White" FontSize="18" VerticalAlignment="Center"/>
            </StackPanel>
            <StackPanel Grid.Row="2" Margin="0,10,0,0" Orientation="Horizontal" HorizontalAlignment="Left">
                <StackPanel>
                    <TextBlock Text="Profile name" Foreground="White"/>
                    <TextBox Text="{Binding ProfileName}" Width="200" mah:TextBoxHelper.Watermark="Enter profile name...">
                        <TextBox.Style>
                            <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource MahApps.Styles.TextBox}">
                                <Setter Property="IsEnabled" Value="True"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ProfileNameButtonContent}" Value="Edit">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>
                </StackPanel>
                <Button Margin="5,0,0,0" d:Content="Ok" Content="{Binding ProfileNameButtonContent}" Command="{Binding ProfileNameSaveCommand}" Height="26" VerticalAlignment="Bottom"/>
                <StackPanel Margin="20,0,0,0" VerticalAlignment="Bottom">
                    <TextBlock Text="Driver" Foreground="White"/>
                    <ComboBox mah:TextBoxHelper.Watermark="Select driver..." ItemsSource="{Binding Drivers}" SelectedItem="{Binding Driver}" Width="200">
                        <ComboBox.Style>
                            <Style TargetType="ComboBox" BasedOn="{StaticResource MahApps.Styles.ComboBox}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsStarted}" Value="True">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ComboBox.Style>
                    </ComboBox>
                </StackPanel>
                <StackPanel Margin="20,0,0,0" VerticalAlignment="Bottom">
                    <TextBlock Text="Device" Foreground="White"/>
                    <ComboBox mah:TextBoxHelper.Watermark="Select device..." ItemsSource="{Binding DeviceCollection}" SelectedItem="{Binding Device}" DisplayMemberPath="Key" Width="200" ToolTip="{Binding Path=SelectedItem.Value, RelativeSource={RelativeSource Self}}">
                        <ComboBox.ItemContainerStyle>
                            <Style TargetType="ComboBoxItem">
                                <Setter Property="ToolTip" Value="{Binding Value}" />
                            </Style>
                        </ComboBox.ItemContainerStyle>
                        <ComboBox.Style>
                            <Style TargetType="ComboBox" BasedOn="{StaticResource MahApps.Styles.ComboBox}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Driver}" Value="{x:Null}">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsStarted}" Value="True">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ComboBox.Style>
                    </ComboBox>
                </StackPanel>
                <StackPanel Margin="20,0,0,0" VerticalAlignment="Bottom">
                    <TextBlock Text="Event / Data Preselection" Foreground="White"/>
                    <ComboBox mah:TextBoxHelper.Watermark="Preselection..." ItemsSource="{Binding EventDataTypePreSelections}" SelectedItem="{Binding EventDataTypePreSelection}" Width="200"/>
                </StackPanel>
            </StackPanel>
        </Grid>

        <mah:MetroTabControl Margin="25,20,50,20" HorizontalContentAlignment="Left" Background="Transparent" Grid.Row="1" d:Visibility="Visible" >

            <TabItem Header="Input" Background="#FF252525">

                <TabItem.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Activate" Command="{Binding ActivateAllInputOutputCreatorCommand}" CommandParameter="{Binding ProfileCreatorModel.InputCreator}"/>
                        <MenuItem Header="Deactivate" Command="{Binding DeactivateAllInputOutputCreatorCommand}" CommandParameter="{Binding ProfileCreatorModel.InputCreator}"/>
                    </ContextMenu>
                </TabItem.ContextMenu>

                <DockPanel HorizontalAlignment="Left">

                    <DataGrid
                    Margin="0,0,0,40"
                    DockPanel.Dock="Top"
                    CanUserDeleteRows="False"
                    CanUserAddRows="False"
                    CanUserResizeColumns="False"
                    CanUserResizeRows="False"
                    AutoGenerateColumns="False"
                    BorderThickness="5"
                    GridLinesVisibility="All"
                    d:ItemsSource="{d:SampleData ItemCount=200}"
                    dd:DragDrop.IsDragSource="True"
                    dd:DragDrop.IsDropTarget="True"
                    dd:DragDrop.DropHandler="{Binding}"
                    ItemsSource="{Binding ProfileCreatorModel.InputCreator}"
                    ContextMenu="{DynamicResource DataGridContextMenu}">

                        <DataGrid.Columns>

                            <DataGridTemplateColumn Header="Active" SortMemberPath="IsActive">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <CheckBox IsChecked="{Binding IsActive, UpdateSourceTrigger=PropertyChanged}" Padding="0" HorizontalAlignment="Center">
                                            <CheckBox.Style>
                                                <Style TargetType="CheckBox" BasedOn="{StaticResource MahApps.Styles.CheckBox}">
                                                    <Setter Property="mah:CheckBoxHelper.CheckGlyphForegroundChecked" Value="White"/>
                                                    <Setter Property="mah:CheckBoxHelper.CheckGlyphForegroundCheckedMouseOver" Value="White"/>
                                                </Style>
                                            </CheckBox.Style>
                                        </CheckBox>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellStyle>
                                    <Style TargetType="DataGridCell" BasedOn="{StaticResource MahApps.Styles.DataGridCell}">
                                        <Setter Property="IsTabStop" Value="False"/>
                                    </Style>
                                </DataGridTemplateColumn.CellStyle>
                            </DataGridTemplateColumn>

                            <DataGridTextColumn
                            Header="Description"
                            Width="500"
                            Binding="{Binding Description}"
                            SortMemberPath="Description"/>

                            <DataGridTextColumn
                            Header="Input Type"
                            Binding="{Binding InputType}"
                            SortMemberPath="InputType"
                            IsReadOnly="True"/>
                            
                            <DataGridTextColumn
                            Header="Input"
                            Binding="{Binding Input}"
                            SortMemberPath="Input"
                            IsReadOnly="True"/>

                            <DataGridTextColumn
                            Header="Event Type"
                            Binding="{Binding EventType}"
                            SortMemberPath="EventType"
                            IsReadOnly="True"/>

                            <DataGridTextColumn
                            Header="PMDG Event"
                            Binding="{Binding PMDGEvent}"
                            SortMemberPath="PMDGEvent"
                            IsReadOnly="True"/>

                            <DataGridTextColumn
                            Header="Event"
                            Binding="{Binding Event}"
                            SortMemberPath="Event"
                            IsReadOnly="True"/>

                            <DataGridTextColumn
                            Header="Mouse Press"
                            Binding="{Binding PMDGMousePress.Key}"
                            SortMemberPath="PMDGMousePress"
                            IsReadOnly="True"/>

                            <DataGridTextColumn
                            Header="Mouse Release"
                            Binding="{Binding PMDGMouseRelease.Key}"
                            SortMemberPath="PMDGMouseRelease"
                            IsReadOnly="True"/>

                            <DataGridTextColumn
                            Header="Data Press"
                            Binding="{Binding DataPress}"
                            SortMemberPath="DataPress"
                            IsReadOnly="True"/>

                            <DataGridTextColumn
                            Header="Data Release"
                            Binding="{Binding DataRelease}"
                            SortMemberPath="DataRelease"
                            IsReadOnly="True"/>

                            <DataGridCheckBoxColumn
                            Header="Logic"
                            SortMemberPath="HasLogic"
                            IsReadOnly="True">
                                <DataGridCheckBoxColumn.ElementStyle>
                                    <Style TargetType="CheckBox" BasedOn="{StaticResource MahApps.Styles.CheckBox.DataGrid}">
                                        <Setter Property="IsChecked" Value="True"/>
                                        <Setter Property="mah:CheckBoxHelper.CheckGlyphForegroundChecked" Value="White"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Preconditions.Count}" Value="0">
                                                <Setter Property="IsChecked" Value="False"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </DataGridCheckBoxColumn.ElementStyle>
                            </DataGridCheckBoxColumn>

                            <DataGridTemplateColumn Header="Edit" IsReadOnly="True">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Button
                                        Command="{Binding DataContext.EditInputOutputCommand, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}, Mode=FindAncestor}}" 
                                        CommandParameter="{Binding}">
                                            <Viewbox Width="24" Height="24">
                                                <Canvas Height="24" Width="24">
                                                    <Path  Fill="White" Data="M14.06,9L15,9.94L5.92,19H5V18.08L14.06,9M17.66,3C17.41,3 17.15,3.1 16.96,3.29L15.13,5.12L18.88,8.87L20.71,7.04C21.1,6.65 21.1,6 20.71,5.63L18.37,3.29C18.17,3.09 17.92,3 17.66,3M14.06,6.19L3,17.25V21H6.75L17.81,9.94L14.06,6.19Z"/>
                                                </Canvas>
                                            </Viewbox>
                                            <Button.Resources>
                                                <Style TargetType="Button">
                                                    <Setter Property="Background" Value="Transparent"/>
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="Button">
                                                                <Border
                                                                Background="{TemplateBinding Background}">
                                                                    <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                                </Border>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Style.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="Background" Value="SteelBlue"/>
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Button.Resources>
                                        </Button>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellStyle>
                                    <Style TargetType="DataGridCell">
                                        <Setter Property="IsTabStop" Value="False"/>
                                        <Setter Property="Background" Value="Transparent"/>
                                        <Setter Property="BorderThickness" Value="0"/>
                                    </Style>
                                </DataGridTemplateColumn.CellStyle>
                            </DataGridTemplateColumn>

                            <DataGridTemplateColumn Header="Delete" IsReadOnly="True">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Button
                                        Command="{Binding DataContext.DeleteInputOutputCreatorRowCommand, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}, Mode=FindAncestor}}" 
                                        CommandParameter="{Binding}">
                                            <Viewbox Width="24" Height="24">
                                                <Canvas Height="24" Width="24">
                                                    <Path  Fill="White" Data="M6,19A2,2 0 0,0 8,21H16A2,2 0 0,0 18,19V7H6V19M8.46,11.88L9.87,10.47L12,12.59L14.12,10.47L15.53,11.88L13.41,14L15.53,16.12L14.12,17.53L12,15.41L9.88,17.53L8.47,16.12L10.59,14L8.46,11.88M15.5,4L14.5,3H9.5L8.5,4H5V6H19V4H15.5Z"/>
                                                </Canvas>
                                            </Viewbox>
                                            <Button.Resources>
                                                <Style TargetType="Button">
                                                    <Setter Property="Background" Value="Transparent"/>
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type Button}">
                                                                <Border
                                                                Background="{TemplateBinding Background}">
                                                                    <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                                </Border>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Style.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="Background" Value="Red"/>
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Button.Resources>
                                        </Button>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellStyle>
                                    <Style TargetType="DataGridCell">
                                        <Setter Property="IsTabStop" Value="False"/>
                                        <Setter Property="Background" Value="Transparent"/>
                                        <Setter Property="BorderThickness" Value="0"/>
                                    </Style>
                                </DataGridTemplateColumn.CellStyle>
                            </DataGridTemplateColumn>

                        </DataGrid.Columns>

                    </DataGrid>

                    <Button Content="Add" Margin="0,-50,0,0" VerticalAlignment="Center" Foreground="White" Command="{Binding AddInputCommand}">
                        <Button.Style>
                            <Style TargetType="Button" BasedOn="{StaticResource MahApps.Styles.Button}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsStarted}" Value="True">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>

                </DockPanel>
                
            </TabItem>

            <TabItem Header="Output" Background="#FF252525">

                <TabItem.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Activate" Command="{Binding ActivateAllInputOutputCreatorCommand}" CommandParameter="{Binding ProfileCreatorModel.OutputCreator}"/>
                        <MenuItem Header="Deactivate" Command="{Binding DeactivateAllInputOutputCreatorCommand}" CommandParameter="{Binding ProfileCreatorModel.OutputCreator}"/>
                    </ContextMenu>
                </TabItem.ContextMenu>

                <DockPanel HorizontalAlignment="Left">

                    <DataGrid
                    Margin="0,0,0,40"
                    DockPanel.Dock="Top"
                    CanUserDeleteRows="False"
                    CanUserAddRows="False"
                    CanUserResizeColumns="False"
                    CanUserResizeRows="False"
                    AutoGenerateColumns="False"
                    BorderThickness="5"
                    GridLinesVisibility="All"
                    dd:DragDrop.IsDragSource="True"
                    dd:DragDrop.IsDropTarget="True"
                    dd:DragDrop.DropHandler="{Binding}"
                    d:ItemsSource="{d:SampleData}"
                    ItemsSource="{Binding ProfileCreatorModel.OutputCreator}"
                    ContextMenu="{DynamicResource DataGridContextMenu}">

                        <DataGrid.Columns>

                            <DataGridTemplateColumn Header="Active" SortMemberPath="IsActive">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <CheckBox IsChecked="{Binding IsActive, UpdateSourceTrigger=PropertyChanged}" Padding="0" HorizontalAlignment="Center">
                                            <CheckBox.Style>
                                                <Style TargetType="CheckBox" BasedOn="{StaticResource MahApps.Styles.CheckBox}">
                                                    <Setter Property="mah:CheckBoxHelper.CheckGlyphForegroundChecked" Value="White"/>
                                                    <Setter Property="mah:CheckBoxHelper.CheckGlyphForegroundCheckedMouseOver" Value="White"/>
                                                </Style>
                                            </CheckBox.Style>
                                        </CheckBox>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellStyle>
                                    <Style TargetType="DataGridCell" BasedOn="{StaticResource MahApps.Styles.DataGridCell}">
                                        <Setter Property="IsTabStop" Value="False"/>
                                    </Style>
                                </DataGridTemplateColumn.CellStyle>
                            </DataGridTemplateColumn>

                            <DataGridTextColumn
                            Header="Description"
                            Width="500"
                            Binding="{Binding Description, UpdateSourceTrigger=PropertyChanged}"
                            SortMemberPath="Description"/>

                            <DataGridTextColumn
                            Header="Output Type"
                            Binding="{Binding OutputType}"
                            SortMemberPath="OutputType"
                            IsReadOnly="True"/>

                            <DataGridTextColumn
                            Header="Output"
                            Binding="{Binding Output}"
                            SortMemberPath="Output"
                            IsReadOnly="True"/>

                            <DataGridTextColumn
                            Header="Data Type"
                            Binding="{Binding DataType}"
                            SortMemberPath="DataType"
                            IsReadOnly="True"/>

                            <DataGridTextColumn
                            Header="PMDG Data"
                            Binding="{Binding PMDGData}"
                            SortMemberPath="PMDGData"
                            IsReadOnly="True"/>

                            <DataGridTemplateColumn Header="Data" IsReadOnly="True">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Style="{StaticResource MahApps.Styles.TextBlock.DataGrid}">
                                            <Run Text="{Binding Data}"/>
                                            <Run Text=" "/>
                                            <Run Text="{Binding Unit}"/>
                                        </TextBlock>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>

                            <DataGridTextColumn
                            Header="Array Index"
                            Binding="{Binding PMDGDataArrayIndex}"
                            SortMemberPath="PMDGDataArrayIndex"
                            IsReadOnly="True"/>

                            <DataGridTextColumn
                            Header="Operator"
                            Binding="{Binding Operator}"
                            SortMemberPath="Operator"
                            IsReadOnly="True"/>

                            <DataGridTextColumn
                            Header="Comparison Value"
                            Binding="{Binding ComparisonValue}"
                            SortMemberPath="Comparison Value"
                            IsReadOnly="True"/>

                            <DataGridCheckBoxColumn
                            Header="Inverted"
                            Binding="{Binding IsInverted}"
                            SortMemberPath="IsInverted"
                            IsReadOnly="True">
                                <DataGridCheckBoxColumn.ElementStyle>
                                    <Style TargetType="CheckBox" BasedOn="{StaticResource MahApps.Styles.CheckBox.DataGrid}">
                                        <Setter Property="mah:CheckBoxHelper.CheckGlyphForegroundChecked" Value="White"/>
                                    </Style>
                                </DataGridCheckBoxColumn.ElementStyle>
                            </DataGridCheckBoxColumn>

                            <DataGridCheckBoxColumn
                            Header="Logic"
                            SortMemberPath="HasLogic"
                            IsReadOnly="True">
                                <DataGridCheckBoxColumn.ElementStyle>
                                    <Style TargetType="CheckBox" BasedOn="{StaticResource MahApps.Styles.CheckBox.DataGrid}">
                                        <Setter Property="IsChecked" Value="True"/>
                                        <Setter Property="mah:CheckBoxHelper.CheckGlyphForegroundChecked" Value="White"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Preconditions.Count}" Value="0">
                                                <Setter Property="IsChecked" Value="False"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </DataGridCheckBoxColumn.ElementStyle>
                            </DataGridCheckBoxColumn>

                            <DataGridTemplateColumn Header="Edit" IsReadOnly="True">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Button
                                        Command="{Binding DataContext.EditInputOutputCommand, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}, Mode=FindAncestor}}" 
                                        CommandParameter="{Binding}">
                                            <Viewbox Width="24" Height="24">
                                                <Canvas Height="24" Width="24">
                                                    <Path  Fill="White" Data="M14.06,9L15,9.94L5.92,19H5V18.08L14.06,9M17.66,3C17.41,3 17.15,3.1 16.96,3.29L15.13,5.12L18.88,8.87L20.71,7.04C21.1,6.65 21.1,6 20.71,5.63L18.37,3.29C18.17,3.09 17.92,3 17.66,3M14.06,6.19L3,17.25V21H6.75L17.81,9.94L14.06,6.19Z"/>
                                                </Canvas>
                                            </Viewbox>
                                            <Button.Resources>
                                                <Style TargetType="Button">
                                                    <Setter Property="Background" Value="Transparent"/>
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="Button">
                                                                <Border
                                                                Background="{TemplateBinding Background}">
                                                                    <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                                </Border>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Style.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="Background" Value="SteelBlue"/>
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Button.Resources>
                                        </Button>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellStyle>
                                    <Style TargetType="DataGridCell">
                                        <Setter Property="IsTabStop" Value="False"/>
                                        <Setter Property="Background" Value="Transparent"/>
                                        <Setter Property="BorderThickness" Value="0"/>
                                    </Style>
                                </DataGridTemplateColumn.CellStyle>
                            </DataGridTemplateColumn>

                            <DataGridTemplateColumn Header="Delete" IsReadOnly="True">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Button
                                        Command="{Binding DataContext.DeleteInputOutputCreatorRowCommand, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}, Mode=FindAncestor}}" 
                                        CommandParameter="{Binding}">
                                            <Viewbox Width="24" Height="24">
                                                <Canvas Height="24" Width="24">
                                                    <Path  Fill="White" Data="M6,19A2,2 0 0,0 8,21H16A2,2 0 0,0 18,19V7H6V19M8.46,11.88L9.87,10.47L12,12.59L14.12,10.47L15.53,11.88L13.41,14L15.53,16.12L14.12,17.53L12,15.41L9.88,17.53L8.47,16.12L10.59,14L8.46,11.88M15.5,4L14.5,3H9.5L8.5,4H5V6H19V4H15.5Z"/>
                                                </Canvas>
                                            </Viewbox>
                                            <Button.Resources>
                                                <Style TargetType="Button">
                                                    <Setter Property="Background" Value="Transparent"/>
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="Button">
                                                                <Border
                                                                Background="{TemplateBinding Background}">
                                                                    <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                                </Border>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Style.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="Background" Value="Red"/>
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Button.Resources>
                                        </Button>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellStyle>
                                    <Style TargetType="DataGridCell">
                                        <Setter Property="IsTabStop" Value="False"/>
                                        <Setter Property="Background" Value="Transparent"/>
                                        <Setter Property="BorderThickness" Value="0"/>
                                    </Style>
                                </DataGridTemplateColumn.CellStyle>
                            </DataGridTemplateColumn>

                            <DataGridTextColumn
                            Header="Flight Sim Value"
                            Foreground="Red"
                            Binding="{Binding FlightSimValue}"
                            SortMemberPath="Value"
                            IsReadOnly="True"/>

                            <DataGridTextColumn
                            Header="Output Value"
                            Foreground="LimeGreen"
                            Binding="{Binding OutputValue}"
                            SortMemberPath="Value"
                            IsReadOnly="True"/>

                        </DataGrid.Columns>

                    </DataGrid>

                    <Button Content="Add" Margin="0,-50,0,0" VerticalAlignment="Center" Foreground="White" Command="{Binding AddOutputCommand}">
                        <Button.Style>
                            <Style TargetType="Button" BasedOn="{StaticResource MahApps.Styles.Button}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsStarted}" Value="True">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>

                </DockPanel>
            </TabItem>
            
            <mah:MetroTabControl.Style>
                <Style TargetType="mah:MetroTabControl" BasedOn="{StaticResource MahApps.Styles.TabControl.Animated}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Device.Key}" Value="{x:Null}">
                            <Setter Property="Visibility" Value="Hidden"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </mah:MetroTabControl.Style>

            <mah:MetroTabControl.Resources>
                <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource MahApps.Styles.DataGridColumnHeader}">
                    <Setter Property="mah:ControlsHelper.ContentCharacterCasing" Value="Normal"/>
                </Style>
                <ContextMenu x:Key="DataGridContextMenu">
                    <MenuItem Command="{Binding DuplicateInputOutputCreatorRowCommand}"
                              CommandParameter="{Binding Path=PlacementTarget.SelectedItems, RelativeSource={RelativeSource AncestorType=ContextMenu}}">
                        <MenuItem.Style>
                            <Style TargetType="MenuItem" BasedOn="{StaticResource MahApps.Styles.MenuItem}">
                                <Setter Property="Header" Value="Duplicate rows" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=PlacementTarget.SelectedItems.Count, RelativeSource={RelativeSource AncestorType=ContextMenu}}" Value="1">
                                        <Setter Property="Header" Value="Duplicate row" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </MenuItem.Style>
                    </MenuItem>
                    <MenuItem Command="{Binding DeleteInputOutputCreatorRowCommand}"
                              CommandParameter="{Binding Path=PlacementTarget.SelectedItems, RelativeSource={RelativeSource AncestorType=ContextMenu}}">
                        <MenuItem.Style>
                            <Style TargetType="MenuItem" BasedOn="{StaticResource MahApps.Styles.MenuItem}">
                                <Setter Property="Header" Value="Delete rows" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=PlacementTarget.SelectedItems.Count, RelativeSource={RelativeSource AncestorType=ContextMenu}}" Value="1">
                                        <Setter Property="Header" Value="Delete row" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </MenuItem.Style>
                    </MenuItem>
                </ContextMenu>
            </mah:MetroTabControl.Resources>

        </mah:MetroTabControl>

    </Grid>
</mah:MetroWindow>