<UserControl x:Class="Device_Interface_Manager.MVVM.View.TestView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             d:DataContext="{d:DesignInstance Type=viewModel:OtherTestsViewModel, IsDesignTimeCreatable=True}"
             xmlns:viewModel="clr-namespace:Device_Interface_Manager.MVVM.ViewModel"
             mc:Ignorable="d" 
             d:DesignWidth="1040"
             d:DesignHeight="560">

    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    </UserControl.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*">
            </ColumnDefinition>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <Grid.Resources>
            <Style x:Key="MyButton" TargetType="Button">
                <Setter Property="Height" Value="Auto"/>
                <Setter Property="Width" Value="250"/>
                <Setter Property="VerticalAlignment" Value="Top"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Foreground" Value="Black"/>
                <Setter Property="Background" Value="DimGray"/>
                <Setter Property="FontSize" Value="23"/>
                <Setter Property="IsTabStop" Value="False"/>
                <Style.Resources>
                    <Style TargetType="Border">
                        <Setter Property="CornerRadius" Value="10"/>
                    </Style>
                </Style.Resources>
            </Style>
        </Grid.Resources>
        <StackPanel>

            <Button 
                Margin="0,50,0,0"
                Cursor="Hand"
                Command="{Binding DatalineEnableCommand}">
                Dataline
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource ResourceKey=MyButton}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding DatalineEnabled}" Value="True">
                                <Setter Property="Background" Value="LimeGreen"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>

            <Button
                Margin="0,50,0,0"
                Cursor="Hand"
                Command="{Binding BrightnessEnableCommand}"
                Content="Brightness">
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource ResourceKey=MyButton}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding BrightnessEnabled}" Value="True">
                                <Setter Property="Background" Value="LimeGreen"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>

            <Slider
                Minimum="0"
                Maximum="255"
                Width="250"
                Margin="0,30,0,0"
                Cursor="Hand"
                d:Visibility="Visible"
                AutoToolTipPlacement="TopLeft"
                IsTabStop="False"
                ToolTip="{Binding BrightnessValue}"
                Visibility="{Binding BrightnessEnabled, Converter={StaticResource BooleanToVisibilityConverter}}"
                Value="{Binding BrightnessValue}">
            </Slider>

            <Button
                Margin="0,50,0,0"
                Cursor="Hand"
                Command="{Binding AnalogEnableCommand}"
                ToolTip="The returned value is 12 bit value indicating the input in relation to GND and board +5v.">
                Analog Input
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource ResourceKey=MyButton}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding AnalogEnabled}" Value="True">
                                <Setter Property="Background" Value="LimeGreen"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>

            <Label 
                Margin="0,20,0,0"
                Content="{Binding AnalogValue}"
                HorizontalAlignment="Center"
                VerticalAlignment="Top"
                FontSize="22"
                FontWeight="Bold"
                Foreground="White"
                Width="Auto"
                d:Visibility="Visible"
                Visibility="{Binding AnalogEnabled, Converter={StaticResource BooleanToVisibilityConverter}}"/>

            <Button
                Margin="0,130,0,0"
                Cursor="Hand"
                Command="{Binding LoggingEnableCommand}"
                ToolTip="External logging"
                Width="150">
                Logging
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource ResourceKey=MyButton}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding LoggingEnabled}" Value="True">
                                <Setter Property="Background" Value="LimeGreen"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
        </StackPanel>

        <StackPanel
            Grid.Column="1">
            <Button 
                Margin="0,50,0,0"
                Cursor="Hand"
                Command="{Binding SevenSegmentEnableCommand}">
                7 Segment
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource ResourceKey=MyButton}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding SevenSegmentEnabled}" Value="True">
                                <Setter Property="Background" Value="LimeGreen"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <StackPanel
                d:Visibility="Visible"
                Visibility="{Binding SevenSegmentEnabled, Converter={StaticResource BooleanToVisibilityConverter}}">
                <Label
                FontSize="20"
                FontWeight="SemiBold"
                Margin="0,50,0,0"
                Foreground="White"
                HorizontalAlignment="Center">
                Select 7 segment digit:
            </Label>
                <ComboBox
                    Margin="0,10,0,0"
                    Cursor="Hand"
                    FontSize="18"
                    FontWeight="Bold"
                    HorizontalContentAlignment="Center"
                    Width="100"
                    SelectedItem="{Binding SevenSegmentSelectedPosition, Mode=TwoWay}"
                    ItemsSource="{Binding SevenSegmentPositions}">
                    <ComboBox.ItemContainerStyle>
                        <Style TargetType="ComboBoxItem">
                            <Setter Property="Cursor" Value="Hand"/>
                        </Style>
                    </ComboBox.ItemContainerStyle>
                </ComboBox>
            <Label
                FontSize="20"
                FontWeight="SemiBold"
                Margin="0,50,0,0"
                Foreground="White"
                HorizontalAlignment="Center">
                Type in 7 segment data:
            </Label>
                <TextBox
                    Margin="0,10,0,0"
                    d:Text="123"
                    MinWidth="100"
                    HorizontalAlignment="Center"
                    HorizontalContentAlignment="Center"
                    FontSize="18"
                    FontWeight="Bold"
                    Text="{Binding SevenSegmentText, UpdateSourceTrigger=PropertyChanged}"/>
            </StackPanel>
            <Label
                d:Content="TEST!"
                FontSize="32"
                Foreground="White"
                HorizontalAlignment="Center"
                Content="{Binding FeatureNotSupported}"
                Margin="0,90,0,0"/>
        </StackPanel>
    </Grid>
</UserControl>