<UserControl
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:local="clr-namespace:Device_Interface_Manager.MVVM.View"
    xmlns:viewModel="clr-namespace:Device_Interface_Manager.MVVM.ViewModel"
    d:DataContext="{d:DesignInstance Type=viewModel:HomeENETViewModel, IsDesignTimeCreatable=True}"
    x:Class="Device_Interface_Manager.MVVM.View.HomeENETView"
    mc:Ignorable="d"
    d:DesignWidth="1040"
    d:DesignHeight="560"
    d:Visibility="Visible"
    Visibility="Visible">

    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    </UserControl.Resources>

    <StackPanel>
        <Grid HorizontalAlignment="Center">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Button 
                Command="{Binding StartENETCommand}"
                Margin="0,25,0,0"
                Cursor="Hand"
                VerticalAlignment="Top"
                Height="30"
                Width="150"
                BorderThickness="0"
                FontSize="20">
                <Button.Resources>
                    <Style TargetType="Button">
                        <Style.Resources>
                            <Style TargetType="Border">
                                <Setter Property="CornerRadius" Value="10"/>
                            </Style>
                        </Style.Resources>
                        <Setter Property="Height" Value="40"/>
                        <Setter Property="Width" Value="150"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="Foreground" Value="Black"/>
                        <Setter Property="FontSize" Value="23"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsENETEnabled}" Value="True">
                                <Setter Property="Content" Value="Start"/>
                                <Setter Property="Background" Value="DarkGray"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsENETEnabled}" Value="False">
                                <Setter Property="Content" Value="Stop"/>
                                <Setter Property="Background" Value="Green"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Resources>
            </Button>
            <Button
                Grid.Column="1"
                 Command="{Binding ResetENETScreensCommand}"
                 Margin="25,25,0,0"
                 VerticalAlignment="Top"
                 Height="30"
                 Width="180"
                 FontSize="20"
                 Background="DarkGray">
                Reset CDU/MCDU
                <Button.Resources>
                    <Style TargetType="Button">
                        <Style.Resources>
                            <Style TargetType="Border">
                                <Setter Property="CornerRadius" Value="10"/>
                            </Style>
                        </Style.Resources>
                        <Setter Property="Height" Value="40"/>
                        <Setter Property="Width" Value="150"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="Foreground" Value="Black"/>
                        <Setter Property="FontSize" Value="23"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsENETEnabled}" Value="True">
                                <Setter Property="Visibility" Value="Hidden"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsENETEnabled}" Value="False">
                                <Setter  Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Resources>
            </Button>
        </Grid>
        
        <DockPanel LastChildFill="False" HorizontalAlignment="Center">
            <DataGrid
                DockPanel.Dock="Top"
                CanUserDeleteRows="False"
                CanUserAddRows="False"
                CanUserReorderColumns="False"
                CanUserResizeColumns="False"
                CanUserResizeRows="False"
                CanUserSortColumns="False"
                IsEnabled="{Binding IsENETEnabled}"
                ItemsSource="{Binding Connections}"
                Margin="0,25,0,80"
                Background="Transparent"
                BorderThickness="5"
                BorderBrush="#FF152A7F" 
                VerticalAlignment="Top" 
                HorizontalAlignment="Center"
                HorizontalScrollBarVisibility="Disabled" 
                GridLinesVisibility="All"
                FontSize="18"
                Foreground="White"
                VerticalGridLinesBrush="#FF152A7F" 
                HorizontalGridLinesBrush="#FF152A7F"
                HeadersVisibility="Column"
                AutoGenerateColumns="False">
                <DataGrid.Resources>
                    <Style TargetType="DataGridColumnHeader">
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="BorderBrush" Value="#FF152A7F"/>
                        <Setter Property="BorderThickness" Value="0,0,3,3"/>
                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                    </Style>
                    <Style TargetType="Border">
                        <Setter Property="CornerRadius" Value="3,3,0,0"/>
                    </Style>
                    <Style TargetType="DataGridRow">
                        <Setter Property="Background" Value="Transparent"/>
                    </Style>
                    <Style TargetType="DataGridCell">
                        <Setter Property="BorderThickness" Value="0"/>
                        <Style.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="Foreground" Value="White"/>
                                <Setter Property="Opacity" Value="0.5"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="False">
                                <Setter Property="Background" Value="Transparent"/>
                            </Trigger>
                            <Trigger Property="IsEditing" Value="True">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="DataGridCell">
                                            <TextBox
                                                Foreground="White"
                                                Background="Transparent"
                                                CaretBrush="White"
                                                Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Content.Text, Mode=TwoWay, UpdateSourceTrigger=Default}"/>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.Resources>
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Name" Binding="{Binding Name}" Width="300">
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="IP-Address" Binding="{Binding IPAddress}" Width="150"/>
                    <DataGridTemplateColumn Header="Status" Width="80" IsReadOnly="True">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Ellipse d:Fill="Red" Height="25" Width="25" StrokeThickness="2" Stroke="White" >
                                    <Ellipse.Resources>
                                        <Style TargetType="Ellipse">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Status}" Value="0">
                                                    <Setter Property="Fill" Value="Red"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Status}" Value="1">
                                                    <Setter Property="Fill" Value="Yellow"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Status}" Value="2">
                                                    <Setter Property="Fill" Value="Green"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Ellipse.Resources>
                                </Ellipse>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="Select Profile" Width="300">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <ComboBox
                                        ItemsSource="{Binding DataContext.Profiles, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:HomeENETView}}}"
                                        SelectedValuePath="Id"
                                        Cursor="Hand"
                                        Foreground="White"
                                        SelectedValue="{Binding Profile.Id}"
                                        SelectedItem="{Binding Profile, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">

                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Name}"/>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                    <ComboBox.ItemContainerStyle>
                                        <Style TargetType="ComboBoxItem">
                                            <Setter Property="Background" Value="#121212"/>
                                            <Setter Property="Foreground" Value="White"/>
                                            <Setter Property="Cursor" Value="Hand"/>
                                        </Style>
                                    </ComboBox.ItemContainerStyle>
                                    <ComboBox.Resources>
                                        <Style TargetType="ComboBox">
                                            <Setter Property="Cursor" Value="Hand"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="ComboBox">
                                                        <Grid>
                                                            <ToggleButton Grid.Column="2" Focusable="False" IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" >
                                                                <ToggleButton.Template>
                                                                    <ControlTemplate>
                                                                        <Grid>
                                                                            <Grid.ColumnDefinitions>
                                                                                <ColumnDefinition Width="5*" />
                                                                                <ColumnDefinition Width="*" />
                                                                            </Grid.ColumnDefinitions>
                                                                            <Border x:Name="Border" Grid.ColumnSpan="2" Background="Transparent"/>
                                                                            <Path x:Name="Arrow" Grid.Column="1"  Fill="White" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z"/>
                                                                        </Grid>
                                                                    </ControlTemplate>
                                                                </ToggleButton.Template>
                                                            </ToggleButton>
                                                            <ContentPresenter Name="ContentSite" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Margin="3"/>
                                                            <TextBox x:Name="PART_EditableTextBox" Visibility="Hidden" IsReadOnly="{TemplateBinding IsReadOnly}"/>
                                                            <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True"  Focusable="False" PopupAnimation="Slide">
                                                                <Grid  Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                                                    <Border x:Name="DropDownBorder" Background="#FF152A7F" />
                                                                    <ScrollViewer SnapsToDevicePixels="True">
                                                                        <StackPanel IsItemsHost="True" />
                                                                    </ScrollViewer>
                                                                </Grid>
                                                            </Popup>
                                                        </Grid>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ComboBox.Resources>
                                </ComboBox>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="Delete" Width="80" IsReadOnly="True">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Button 
                                    Background="Transparent" 
                                    Foreground="White" BorderThickness="0"
                                    Cursor="Hand"
                                    HorizontalAlignment="Stretch"
                                    Command="{Binding DataContext.DeleteRowCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:HomeENETView}}}" 
                                    CommandParameter="{Binding}">
                                    <Button.Content>
                                        <TextBlock Text="X" HorizontalAlignment="Center"/>
                                    </Button.Content>
                                    <Button.Resources>
                                        <Style TargetType="Button">
                                            <Setter Property="Background" Value="Transparent" />
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="Button">
                                                        <Grid Background="Transparent">
                                                            <ContentPresenter />
                                                        </Grid>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Button.Resources>
                                </Button>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
            <Button 
                Command="{Binding AddRowCommand}"
                Visibility="{Binding IsENETEnabled,Converter={StaticResource BooleanToVisibilityConverter}}"
                BorderThickness="5,0,5,0"
                Cursor="Hand"
                Foreground="White"
                BorderBrush="#FF152A7F"
                Background="#FF152A7F"
                Margin="0,-80,0,55"
                DockPanel.Dock="Top" 
                FontSize="16"
                Height="25"
                FontFamily="Arial Black">
                Add
                <Button.Resources>
                    <Style TargetType="Border">
                        <Setter Property="CornerRadius" Value="0,0,3,3"/>
                    </Style>
                    <Style TargetType="Button">
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Border
                                            Background="{TemplateBinding Background}">
                                        <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Center"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="CadetBlue"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Resources>
            </Button>
        </DockPanel>
    </StackPanel>
</UserControl>