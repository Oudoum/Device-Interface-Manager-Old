<UserControl x:Class="Device_Interface_Manager.MVVM.View.SwitchTestView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             d:DataContext="{d:DesignInstance Type=viewModel:SwitchTestViewModel, IsDesignTimeCreatable=True}"
             xmlns:viewModel="clr-namespace:Device_Interface_Manager.MVVM.ViewModel"
             mc:Ignorable="d"
             d:DesignWidth="1040"
             d:DesignHeight="560">

    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    </UserControl.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="450"/>
            <ColumnDefinition Width="450"/>
        </Grid.ColumnDefinitions>

        <Grid.Resources>
            <Style TargetType="Button" BasedOn="{StaticResource MahApps.Styles.Button}" x:Key="ButtonStyle">
                <Setter Property="Margin" Value="0,20,0,0"/>
                <Setter Property="Width" Value="250"/>
                <Setter Property="VerticalAlignment" Value="Top"/>
                <Setter Property="FontSize" Value="23"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="IsTabStop" Value="False"/>
            </Style>
            <Style TargetType="ToolTip">
                <Setter Property="Background" Value="Black"/>
                <Setter Property="Foreground" Value="White"/>
            </Style>
        </Grid.Resources>

        <StackPanel
            HorizontalAlignment="Center"
            VerticalAlignment="Top">

            <Button
                Command="{Binding CallbackModeCommand}"
                Margin="0,150,0,0"
                Content="Callbackmode"
                ToolTip="Every time a switch is pressed you will be notified (list on the right) with the switch number and the direction.">
                <Button.Resources>
                    <Style TargetType="Button" BasedOn="{StaticResource ButtonStyle}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding CallbackModeEnabled}" Value="True">
                                <Setter Property="Background" Value="Green"/>
                                <Setter Property="Content" Value="Enabled"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding CallbackModeEnabled}" Value="False">
                                <Setter Property="Content" Value="Disabled"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding PollModeEnabled}" Value="True">
                                <Setter Property="Visibility" Value="Hidden"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Resources>
            </Button>
            <StackPanel>
                <Button 
                    Command="{Binding PollModeCommand}"
                    Margin="0,100,0,0"
                    Content="Pollmode"
                    ToolTip="Every time a switch is pressed it is added to the receive queue until you click the Get Switch button which removes it from the queue.">
                    <Button.Resources>
                        <Style TargetType="Button" BasedOn="{StaticResource ButtonStyle}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding PollModeEnabled}" Value="True">
                                    <Setter Property="Background" Value="Green"/>
                                    <Setter Property="Content" Value="Enabled"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding PollModeEnabled}" Value="False">
                                    <Setter Property="Content" Value="Disabled"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding CallbackModeEnabled}" Value="True">
                                    <Setter Property="Visibility" Value="Hidden"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Resources>
                </Button>

                <Button
                    Command="{Binding GetSwitchCommand}"
                    Content="Get Switch"
                    ToolTip="As switch notification are received they are added to the queue until this button is pressed to retrieve the oldes item (list on the right) and then remove it.">
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource ButtonStyle}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding CallbackModeEnabled}" Value="True">
                                    <Setter Property="Visibility" Value="Hidden"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            </StackPanel>
        </StackPanel>

        <Button
            Command="{Binding ClearSwitchListCommand}"
            Style="{StaticResource ButtonStyle}"
            Grid.Column="1"
            Content="Clear"
            ToolTip="Clear the switch list."/>

        <ListView 
            x:Name="SwitchLog"
            ItemsSource="{Binding SwitchLog}"
            d:ItemsSource="{d:SampleData ItemCount=14}"
            Grid.Column="1"
            Margin="0,80,0,10"
            Background="Transparent"
            FontSize="22"
            IsTabStop="False">
        </ListView>

    </Grid>
</UserControl>