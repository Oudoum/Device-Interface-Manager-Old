<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:viewModel="clr-namespace:Device_Interface_Manager.MVVM.ViewModel"
        xmlns:cnvs="clr-namespace:Device_Interface_Manager.Core"
        x:Class="Device_Interface_Manager.MVVM.View.MainWindow"
        mc:Ignorable="d"
        Title="Device Interface Manager"
        Height="600"
        Width="920"
        WindowStyle="None"
        ResizeMode="CanResizeWithGrip"
        MinHeight="635"
        MinWidth="1240"
        Background="Transparent"
        AllowsTransparency="True"
        Closing="OnWindowClosing"
        Initialized="Window_Initialized">
    
    <Window.DataContext>
        <viewModel:MainViewModel/>
    </Window.DataContext>

    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <Style x:Key="ToggleStyle"  TargetType="{x:Type ToggleButton}">

            <Setter Property="MaxHeight" Value="30"/>
            <Setter Property="MaxWidth" Value="60"/>
            <Setter Property="MinHeight" Value="30"/>
            <Setter Property="MinWidth" Value="60"/>

            <Setter Property="Template">


                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="bk" Background="#FFD1D1D1" CornerRadius="15">
                            <Ellipse x:Name="ep" Fill="#1C1D2E" HorizontalAlignment="Left" Margin="4" Width="22"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <DataTrigger Binding="{Binding Enet}" Value="False">
                                <Setter TargetName="ep" Property="HorizontalAlignment" Value="Right"/>
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>


    <Border Background="#121212"
            CornerRadius="20"
            MouseDown="Border_MouseDown">
        <Grid>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="200"/>
                <ColumnDefinition />
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition Height="75"/>
                <RowDefinition />
            </Grid.RowDefinitions>

            <Button
                Command="{Binding DIMUpdaterCommand}"
                VerticalAlignment="Center"
                HorizontalAlignment="Center"
                BorderThickness="0"
                Background="Transparent"
                Foreground="White"
                FontSize="50">
                DIM
            </Button>

            <StackPanel Margin="0,0,0,357" Grid.Row="1" Visibility="{Binding Enet, Converter={StaticResource BooleanToVisibilityConverter}}">

                <RadioButton 
                    Content="Home"
                    IsChecked="{Binding RadioButtonHomeIsChecked}"
                    Style="{StaticResource MenuButtonTheme}"
                    Command="{Binding HomeUSBViewCommand}"/>

                <RadioButton 
                    Content="LED Test"
                    IsChecked="{Binding RadioButtonLEDTestIsChecked}"
                    Style="{StaticResource MenuButtonTheme}"
                    Command="{Binding LEDTestViewCommand}"/>

                <RadioButton 
                    Content="Switch Test"
                    IsChecked="{Binding RadioButtonSwitchTesteIsChecked}"
                    Style="{StaticResource MenuButtonTheme}"
                    Command="{Binding SwitchTestViewCommand}"/>

                <RadioButton 
                    Content="Other Tests"
                    IsChecked="{Binding RadioButtonOtherTestIsChecked}"
                    Style="{StaticResource MenuButtonTheme}"
                    Command="{Binding TestViewCommand}"/>

            </StackPanel>


            <StackPanel Margin="0,0,0,357" Grid.Row="1">

                <RadioButton 
                    Content="Home"
                    IsChecked="{Binding RadioButtonHomeENETIsChecked}"
                    Style="{StaticResource MenuButtonTheme}"
                    Command="{Binding HomeENETViewCommand}"/>

                <RadioButton 
                    Content="Boardinfo"
                    IsChecked="{Binding RadioButtonBoardinfoENETIsChecked}"
                    Style="{StaticResource MenuButtonTheme}"
                    Command="{Binding BoardinfoENETViewCommand}"/>

                <RadioButton 
                    Content="Test"
                    IsChecked="{Binding RadioButtonTestENETIsChecked}"
                    Style="{StaticResource MenuButtonTheme}"
                    Command="{Binding TestENETViewCommand}"/>

                <StackPanel.Style>
                    <Style TargetType="StackPanel">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Enet}" Value="True">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Enet}" Value="False">
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </StackPanel.Style>
            </StackPanel>

            <StackPanel
                VerticalAlignment="Top"
                HorizontalAlignment="Center"
                Orientation="Horizontal"
                Margin="0,207,0,0" 
                Grid.Row="1">
                <Label
                        Margin="0,0,10,0"
                        Content="USB"
                        Foreground="White"
                        FontSize="18"/>
                <ToggleButton
                    Style="{DynamicResource ToggleStyle}"
                    Content="USB/Ethernet"
                    Height="20" 
                    Command="{Binding HomeENETViewToggleCommand}"/>
                <Label
                        Margin="10,0,0,0"
                        Content="ENET"
                        Foreground="White"
                        FontSize="18"/>
            </StackPanel>


            <Grid 
                    Margin="0,250,0,70" 
                    Grid.Row="1"
                    Visibility="{Binding Enet, Converter={StaticResource BooleanToVisibilityConverter}}">
                <ListView 
                          Background="Transparent"
                          Foreground="White"
                          FontSize="18"
                          HorizontalContentAlignment="Center"
                          Margin="5"
                          ItemsSource="{Binding DeviceList}"
                          SelectedValuePath="Id"
                          SelectedValue="{Binding SelectedController}">
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <TextBlock MouseMove="ListViewItem_MouseMove" Text="{Binding BoardType}" ToolTip="{Binding SerialNumber}"/>
                            <DataTemplate.Resources>
                                <Style TargetType="ToolTip">
                                    <Setter Property="Background" Value="Black"/>
                                    <Setter Property="Foreground" Value="White"/>
                                </Style>
                            </DataTemplate.Resources>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                    <ListView.Template>
                        <ControlTemplate>
                            <Border 
                                CornerRadius="10"
                                BorderThickness="5"
                                BorderBrush="DarkSlateBlue">
                                <ScrollViewer
                                    HorizontalScrollBarVisibility="Hidden"
                                    VerticalScrollBarVisibility="Auto">
                                    <ItemsPresenter/>
                                </ScrollViewer>
                            </Border>
                        </ControlTemplate>
                    </ListView.Template>
                    <ListView.ItemContainerStyle>
                        <Style TargetType="{x:Type ListViewItem}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                                        <ContentPresenter HorizontalAlignment="Center"/>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Foreground" Value="#14AA00"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ListView.ItemContainerStyle>
                </ListView>
            </Grid>

            <TextBox Width="250"
                     Height="40"
                     VerticalAlignment="Center"
                     HorizontalAlignment="Left"
                     Margin="5"
                     Grid.Column="1"
                     Style="{StaticResource ModernTextbox}"
                     Visibility="Hidden"/>

            <Button Grid.Column="1"
                    Width="20"
                    Height="20"
                    Margin="0,10,50,45"
                    Content="🗕︎"
                    Background="Transparent"
                    Foreground="Gray"
                    BorderThickness="0"
                    HorizontalAlignment="Right"
                    Click="ButtonMinimize_Click"/>

            <Button Grid.Column="1"
                    Width="20"
                    Height="20"
                    Margin="0,10,30,45"
                    Content="🗖︎"
                    Background="Transparent"
                    Foreground="Gray"
                    BorderThickness="0"
                    HorizontalAlignment="Right"
                    Click="ButtonMaximized_Click"/>

            <Button Grid.Column="1"
                    Width="20"
                    Height="20"
                    Margin="0,10,10,45"
                    Content="🗙︎"
                    Foreground="Gray"
                    BorderThickness="0"
                    HorizontalAlignment="Right"
                    Click="ButtonClose_Click"
                    Style="{StaticResource ButtonCloseTheme}"/>

            <ContentControl
                x:Name="ContentControl"
                Grid.Row="1"
                Grid.Column="1"
                Content="{Binding CurrentView, Converter={x:Static cnvs:ObjectToUIElementConverter.Default}}"/>

            <Button 
                Content="{Binding TotalControllers, NotifyOnTargetUpdated=True}"
                FontSize="18"
                Height="50"
                BorderThickness="0"
                Foreground="White"
                Margin="10,0,0,0"
                Grid.Column="1"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                Command="{Binding DeviceCountRefreshCommand}"
                IsEnabled="{Binding HomeUSBVM.IsUSBEnabled}"
                >
                <Button.Resources>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border
                                        Background="{TemplateBinding Background}">
                                        <ContentPresenter 
                                          Content="{TemplateBinding Content}"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="CadetBlue"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Resources>
                <Button.Visibility>
                    <Binding Converter="{StaticResource BooleanToVisibilityConverter}" Path="Enet"/>
                </Button.Visibility>
            </Button>

            <Button
                d:Visibility="Visible"
                Content="Open ProfileCreator"
                HorizontalAlignment="Center"
                Visibility="Hidden"
                FontSize="16"
                FontWeight="Bold"
                Width="200"
                Margin="420,20,420,20"
                FontFamily="Arial Black"
                Grid.Column="1"/>

            <Label
                Content="{Binding DIMVersion}"
                Width="200"
                Height="50"
                VerticalContentAlignment="Center"
                HorizontalAlignment="Right"
                FontSize="18"
                Foreground="White"
                Grid.Column="1"
                Margin="770,0,70,0"/>

            <Ellipse 
                HorizontalAlignment="Center"
                Grid.Column="1" 
                Height="40" 
                Margin="0,0,330,0"
                StrokeThickness="4"
                Stroke="Gray"  
                Width="40">
                <Ellipse.Style>
                    <Style TargetType="{x:Type Ellipse}">
                        <Setter Property="Fill" Value="Red"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding HomeUSBVM.IsSimConnectOpen}" Value="True">
                                <Setter Property="Fill" Value="LimeGreen"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Ellipse.Style>
            </Ellipse>

            <Grid
                Grid.Row="1"
                Margin="0,0,0,10"
                HorizontalAlignment="Center"
                VerticalAlignment="Bottom" 
                Height="50" >
                <Button
                    BorderThickness="0"
                    Background="Transparent"
                    Command="{Binding SettingsViewCommand}">
                    <Image 
                        RenderOptions.BitmapScalingMode="HighQuality"
                        Source="pack://application:,,,/Images/settings-cog.png"/>
                </Button>
            </Grid>
        </Grid>
    </Border>
</Window>
