<mah:MetroWindow
    x:Class="Device_Interface_Manager.MVVM.View.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:viewModel="clr-namespace:Device_Interface_Manager.MVVM.ViewModel"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
    mc:Ignorable="d"
    Title="Device Interface Manager"
    Height="600"
    Width="920"
    MinHeight="635"
    MinWidth="1240"
    MaxHeight="{x:Static SystemParameters.MaximizedPrimaryScreenHeight}"
    SaveWindowPosition="True"
    WindowStyle="None"
    UseNoneWindowStyle="True"
    Background="Transparent"
    BorderThickness="0"
    AllowsTransparency="True">

    <WindowChrome.WindowChrome>
        <WindowChrome ResizeBorderThickness="5" CaptionHeight="0"/>
    </WindowChrome.WindowChrome>

    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <Style x:Key="ToggleStyle"  TargetType="ToggleButton">

            <Setter Property="MaxHeight" Value="30"/>
            <Setter Property="MaxWidth" Value="60"/>
            <Setter Property="MinHeight" Value="30"/>
            <Setter Property="MinWidth" Value="60"/>

            <Setter Property="Template">


                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border x:Name="bk" Background="#FFD1D1D1" CornerRadius="15">
                            <Ellipse x:Name="ep" Fill="#1C1D2E" HorizontalAlignment="Left" Margin="4" Width="22"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <DataTrigger Binding="{Binding Enet}" Value="False">
                                <Setter TargetName="ep" Property="HorizontalAlignment" Value="Right"/>
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>


    <Window.DataContext>
        <viewModel:MainViewModel/>
    </Window.DataContext>

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closing">
            <i:InvokeCommandAction Command="{Binding WindowClosingCommand}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Border
        Background="#FF151515"
        CornerRadius="10">
        <Grid>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="200"/>
                <ColumnDefinition />
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition Height="75"/>
                <RowDefinition />
            </Grid.RowDefinitions>

            <Border Background="#121212" Grid.RowSpan="2" CornerRadius="10,0,0,10"/>
            <Border Background="#121212" CornerRadius="10,10,0,0" MouseDown="Grid_MouseDown" Grid.ColumnSpan="2"/>

            <TextBlock
                MouseDown="Grid_MouseDown"
                VerticalAlignment="Center"
                HorizontalAlignment="Center"
                Background="Transparent"
                Foreground="White"
                FontSize="50"><Run Text="DIM"/></TextBlock>

            <StackPanel Grid.Row="1">

                <StackPanel Visibility="{Binding Enet, Converter={StaticResource BooleanToVisibilityConverter}}">

                    <RadioButton 
                    Content="Home"
                    IsChecked="{Binding RadioButtonHomeIsChecked}"
                    Style="{StaticResource MenuButtonTheme}"
                    Command="{Binding HomeUSBViewCommand}"/>

                    <RadioButton 
                    Content="LED Test"
                    IsChecked="{Binding RadioButtonLEDTestIsChecked}"
                    Style="{StaticResource MenuButtonTheme}"
                    Command="{Binding LEDTestViewCommand}"/>

                    <RadioButton 
                    Content="Switch Test"
                    IsChecked="{Binding RadioButtonSwitchTesteIsChecked}"
                    Style="{StaticResource MenuButtonTheme}"
                    Command="{Binding SwitchTestViewCommand}"/>

                    <RadioButton 
                    Content="Other Tests"
                    IsChecked="{Binding RadioButtonOtherTestIsChecked}"
                    Style="{StaticResource MenuButtonTheme}"
                    Command="{Binding TestViewCommand}"/>

                </StackPanel>


                <StackPanel>

                    <StackPanel.Style>
                        <Style TargetType="StackPanel">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Enet}" Value="True">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Enet}" Value="False">
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>

                    <RadioButton 
                    Content="Home"
                    IsChecked="{Binding RadioButtonHomeENETIsChecked}"
                    Style="{StaticResource MenuButtonTheme}"
                    Command="{Binding HomeENETViewCommand}"/>

                    <RadioButton 
                    Content="Boardinfo"
                    IsChecked="{Binding RadioButtonBoardinfoENETIsChecked}"
                    Style="{StaticResource MenuButtonTheme}"
                    Command="{Binding BoardinfoENETViewCommand}"/>

                    <RadioButton 
                    Content="Test"
                    IsChecked="{Binding RadioButtonTestENETIsChecked}"
                    Style="{StaticResource MenuButtonTheme}"
                    Command="{Binding TestENETViewCommand}"/>

                    <RadioButton
                    IsEnabled="False"
                    IsChecked="{Binding RadioButtonTestENETIsChecked}"
                    Style="{StaticResource MenuButtonTheme}"/>

                </StackPanel>

                <StackPanel
                VerticalAlignment="Top"
                HorizontalAlignment="Center"
                Margin="0,10,0,0"
                Orientation="Horizontal">
                    <Label
                    Margin="0,0,10,0"
                    Content="USB"
                    FontSize="18">
                        <Label.Style>
                            <Style TargetType="Label">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Enet}" Value="True">
                                        <Setter Property="Foreground" Value="#14AA00"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Enet}" Value="False">
                                        <Setter Property="Foreground" Value="White"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Label.Style>
                    </Label>
                    <ToggleButton
                    Style="{DynamicResource ToggleStyle}"
                    Content="USB/Ethernet"
                    Height="20" 
                    Cursor="Hand"
                    IsTabStop="False"
                    Command="{Binding HomeENETViewToggleCommand}"/>
                    <Label
                    Margin="10,0,0,0"
                    Content="ENET"
                    FontSize="18">
                        <Label.Style>
                            <Style TargetType="Label">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Enet}" Value="False">
                                        <Setter Property="Foreground" Value="#14AA00"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Enet}" Value="True">
                                        <Setter Property="Foreground" Value="White"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Label.Style>
                    </Label>
                </StackPanel>

            </StackPanel>

            <Grid
                Grid.Row="1"
                Margin="10,260,10,70"
                Visibility="{Binding Enet, Converter={StaticResource BooleanToVisibilityConverter}}">
                <ListView
                    VerticalAlignment="Top"
                    Background="Transparent"
                    Foreground="White"
                    ItemsSource="{Binding DeviceList}"
                    SelectedValuePath="Id"
                    SelectedValue="{Binding SelectedController}">
                    <ListView.Template>
                        <ControlTemplate>
                            <Border
                                CornerRadius="10"
                                BorderThickness="5"
                                BorderBrush="DarkSlateBlue">
                                <ScrollViewer
                                    HorizontalScrollBarVisibility="Disabled"
                                    VerticalScrollBarVisibility="Auto">
                                    <ItemsPresenter/>
                                </ScrollViewer>
                            </Border>
                        </ControlTemplate>
                    </ListView.Template>
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem" BasedOn="{StaticResource MahApps.Styles.ListViewItem}">
                            <Setter Property="IsTabStop" Value="False"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ListViewItem">
                                        <ContentPresenter>
                                            <ContentPresenter.ContentTemplate>
                                                <DataTemplate>
                                                    <Viewbox StretchDirection="DownOnly" Margin="5">
                                                        <TextBlock FontSize="20" Cursor="Hand" MouseMove="ListViewItem_MouseMove" Text="{Binding BoardType}" ToolTip="{Binding SerialNumber}"/>
                                                    </Viewbox>
                                                </DataTemplate>
                                            </ContentPresenter.ContentTemplate>
                                        </ContentPresenter>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Foreground" Value="#14AA00"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ListView.ItemContainerStyle>
                    <ListView.Style>
                        <Style TargetType="ListView" BasedOn="{StaticResource MahApps.Styles.ListBox}">
                            <Setter Property="Visibility" Value="Visible"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding DeviceList.Count}" Value="0">
                                    <Setter Property="Visibility" Value="Hidden"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ListView.Style>
                </ListView>
            </Grid>

            <Grid
                Grid.Row="1"
                Margin="0,0,0,15"
                HorizontalAlignment="Center"
                VerticalAlignment="Bottom" 
                Cursor="Hand">
                <Button 
                    x:Name="button"
                    BorderThickness="0"
                    Background="Transparent"
                    IsTabStop="False"
                    Command="{Binding SettingsViewCommand}">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="Button">
                                        <Grid Background="{TemplateBinding Background}">
                                            <ContentPresenter />
                                        </Grid>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Button.Style>
                    <Viewbox Width="40" Height="40">
                        <Path
                            Fill="Gray"
                            Data="M12,8A4,4 0 0,1 16,12A4,4 0 0,1 12,16A4,4 0 0,1 8,12A4,4 0 0,1 12,8M12,10A2,2 0 0,0 10,12A2,2 0 0,0 12,14A2,2 0 0,0 14,12A2,2 0 0,0 12,10M10,22C9.75,22 9.54,21.82 9.5,21.58L9.13,18.93C8.5,18.68 7.96,18.34 7.44,17.94L4.95,18.95C4.73,19.03 4.46,18.95 4.34,18.73L2.34,15.27C2.21,15.05 2.27,14.78 2.46,14.63L4.57,12.97L4.5,12L4.57,11L2.46,9.37C2.27,9.22 2.21,8.95 2.34,8.73L4.34,5.27C4.46,5.05 4.73,4.96 4.95,5.05L7.44,6.05C7.96,5.66 8.5,5.32 9.13,5.07L9.5,2.42C9.54,2.18 9.75,2 10,2H14C14.25,2 14.46,2.18 14.5,2.42L14.87,5.07C15.5,5.32 16.04,5.66 16.56,6.05L19.05,5.05C19.27,4.96 19.54,5.05 19.66,5.27L21.66,8.73C21.79,8.95 21.73,9.22 21.54,9.37L19.43,11L19.5,12L19.43,13L21.54,14.63C21.73,14.78 21.79,15.05 21.66,15.27L19.66,18.73C19.54,18.95 19.27,19.04 19.05,18.95L16.56,17.95C16.04,18.34 15.5,18.68 14.87,18.93L14.5,21.58C14.46,21.82 14.25,22 14,22H10M11.25,4L10.88,6.61C9.68,6.86 8.62,7.5 7.85,8.39L5.44,7.35L4.69,8.65L6.8,10.2C6.4,11.37 6.4,12.64 6.8,13.8L4.68,15.36L5.43,16.66L7.86,15.62C8.63,16.5 9.68,17.14 10.87,17.38L11.24,20H12.76L13.13,17.39C14.32,17.14 15.37,16.5 16.14,15.62L18.57,16.66L19.32,15.36L17.2,13.81C17.6,12.64 17.6,11.37 17.2,10.2L19.31,8.65L18.56,7.35L16.15,8.39C15.38,7.5 14.32,6.86 13.12,6.62L12.75,4H11.25Z"
                            RenderTransformOrigin=".5,.5"
                            Height="24"
                            Width="24"
                            Stretch="Fill" >
                            <Path.RenderTransform>
                                <RotateTransform Angle="0"/>
                            </Path.RenderTransform>
                            <Path.Style>
                                <Style TargetType="Path">
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding ElementName=button , Path=IsMouseOver}" Value="True"/>
                                                <Condition Binding="{Binding SettingsIsChecked}" Value="False"/>
                                            </MultiDataTrigger.Conditions>
                                            <MultiDataTrigger.EnterActions>
                                                <BeginStoryboard x:Name="RotateCog">
                                                    <Storyboard>
                                                        <DoubleAnimation 
                                                        Storyboard.TargetProperty="RenderTransform.Angle"
                                                        To="360"
                                                        Duration="0:0:2"
                                                        RepeatBehavior="Forever"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </MultiDataTrigger.EnterActions>
                                            <MultiDataTrigger.ExitActions>
                                                <StopStoryboard BeginStoryboardName="RotateCog"/>
                                            </MultiDataTrigger.ExitActions>
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Path.Style>
                        </Path>
                    </Viewbox>
                </Button>
            </Grid>

            <Button
                Grid.Column="1"
                FontSize="20"
                Width="45"
                Margin="0,0,90,30"
                Content="🗕︎"
                Background="Transparent"
                Foreground="Gray"
                BorderThickness="0"
                HorizontalAlignment="Right"
                Cursor="Hand"
                IsTabStop="False"
                Click="ButtonMinimize_Click"
                mah:ControlsHelper.CornerRadius="0"
                mah:ControlsHelper.FocusBorderBrush="Transparent"/>

            <Button
                Grid.Column="1"
                FontSize="20"
                Width="45"
                Margin="0,0,45,30"
                Content="🗖︎"
                Background="Transparent"
                Foreground="Gray"
                BorderThickness="0"
                HorizontalAlignment="Right"
                Cursor="Hand"
                IsTabStop="False"
                Click="ButtonMaximized_Click"
                mah:ControlsHelper.CornerRadius="0"
                mah:ControlsHelper.FocusBorderBrush="Transparent">
            </Button>

            <Button
                Grid.Column="1"
                FontSize="20"
                Width="45"
                Margin="0,0,0,30"
                Content="🗙︎"
                Foreground="Gray"
                BorderThickness="0"
                HorizontalAlignment="Right"
                Click="ButtonClose_Click"
                Cursor="Hand"
                IsTabStop="False"
                Style="{StaticResource ButtonCloseTheme}"
                mah:ControlsHelper.FocusBorderBrush="Transparent"/>

            <ContentControl
                Content="{Binding CurrentView}"
                Grid.Row="1"
                Grid.Column="1"
                IsTabStop="False"/>

            <Grid Grid.Column="1" MouseDown="Grid_MouseDown">
                <Button
                Content="{Binding TotalControllers, NotifyOnTargetUpdated=True}"
                Command="{Binding RefreshDeviceListCommand}"
                IsEnabled="{Binding HomeUSBVM.IsUSBEnabled}"
                FontSize="18"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                Cursor="Hand"
                IsTabStop="False">
                    <Button.Resources>
                        <Style TargetType="Button">
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="Button">
                                        <Border
                                        Background="{TemplateBinding Background}">
                                            <ContentPresenter 
                                          Content="{TemplateBinding Content}"/>
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="CadetBlue"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Resources>
                    <Button.Visibility>
                        <Binding Converter="{StaticResource BooleanToVisibilityConverter}" Path="Enet"/>
                    </Button.Visibility>
                </Button>

                <Button
                Command="{Binding OpenProfileCreatorCommand}"
                mah:ControlsHelper.ContentCharacterCasing="Normal"
                Cursor="Hand"
                Visibility="Visible"
                Content="ProfileCreator"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                FontSize="32"
                IsTabStop="False"/>

                <TextBlock
                FontSize="18"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Margin="655,0,147,0">
                    <Run Text="{Binding DIMVersionText}" Foreground="White" />
                    <Run Text="{Binding DIMVersionDate}" Foreground="Yellow" />
                </TextBlock>

                <Ellipse 
                HorizontalAlignment="Center"
                Height="40" 
                Margin="0,0,330,0"
                StrokeThickness="4"
                Stroke="Gray"  
                Width="40">
                    <Ellipse.Style>
                        <Style TargetType="Ellipse">
                            <Setter Property="Fill" Value="Red"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsSimConnectOpen}" Value="True">
                                    <Setter Property="Fill" Value="Green"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Ellipse.Style>
                </Ellipse>
            </Grid>
        </Grid>
    </Border>
</mah:MetroWindow>