<Window
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:viewModel="clr-namespace:Device_Interface_Manager.MVVM.ViewModel"
    xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    x:Class="Device_Interface_Manager.MVVM.View.MainWindow"
    mc:Ignorable="d"
    Title="Device Interface Manager"
    Height="600"
    Width="920"
    WindowStyle="None"
    MinHeight="635"
    MinWidth="1240"
    MaxHeight="{x:Static SystemParameters.MaximizedPrimaryScreenHeight}"
    Background="Transparent"
    AllowsTransparency="True"
    Closing="OnWindowClosing"
    Initialized="Window_Initialized">

    <WindowChrome.WindowChrome>
        <WindowChrome ResizeBorderThickness="5" CaptionHeight="0"/>
    </WindowChrome.WindowChrome>

    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <Style x:Key="ToggleStyle"  TargetType="ToggleButton">

            <Setter Property="MaxHeight" Value="30"/>
            <Setter Property="MaxWidth" Value="60"/>
            <Setter Property="MinHeight" Value="30"/>
            <Setter Property="MinWidth" Value="60"/>

            <Setter Property="Template">


                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border x:Name="bk" Background="#FFD1D1D1" CornerRadius="15">
                            <Ellipse x:Name="ep" Fill="#1C1D2E" HorizontalAlignment="Left" Margin="4" Width="22"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <DataTrigger Binding="{Binding Enet}" Value="False">
                                <Setter TargetName="ep" Property="HorizontalAlignment" Value="Right"/>
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>


    <Window.DataContext>
        <viewModel:MainViewModel/>
    </Window.DataContext>

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closing">
            <i:InvokeCommandAction Command="{Binding WindowClosingCommand}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>


    <Border
        Background="#FF151515"
        CornerRadius="10">
        <Grid>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="200"/>
                <ColumnDefinition />
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition Height="75"/>
                <RowDefinition />
            </Grid.RowDefinitions>

            <Border Background="#121212" Grid.RowSpan="2" CornerRadius="10,0,0,10"/>
            <Border Background="#121212" CornerRadius="10,10,0,0" MouseDown="Grid_MouseDown" Grid.ColumnSpan="2"/>

            <TextBlock
                MouseDown="Grid_MouseDown"
                VerticalAlignment="Center"
                HorizontalAlignment="Center"
                Background="Transparent"
                Foreground="White"
                FontSize="50"><Run Text="DIM"/></TextBlock>

            <StackPanel Margin="0,0,0,357" Grid.Row="1" Visibility="{Binding Enet, Converter={StaticResource BooleanToVisibilityConverter}}">

                <RadioButton 
                    Content="Home"
                    IsChecked="{Binding RadioButtonHomeIsChecked}"
                    Style="{StaticResource MenuButtonTheme}"
                    Command="{Binding HomeUSBViewCommand}"/>

                <RadioButton 
                    Content="LED Test"
                    IsChecked="{Binding RadioButtonLEDTestIsChecked}"
                    Style="{StaticResource MenuButtonTheme}"
                    Command="{Binding LEDTestViewCommand}"/>

                <RadioButton 
                    Content="Switch Test"
                    IsChecked="{Binding RadioButtonSwitchTesteIsChecked}"
                    Style="{StaticResource MenuButtonTheme}"
                    Command="{Binding SwitchTestViewCommand}"/>

                <RadioButton 
                    Content="Other Tests"
                    IsChecked="{Binding RadioButtonOtherTestIsChecked}"
                    Style="{StaticResource MenuButtonTheme}"
                    Command="{Binding TestViewCommand}"/>

            </StackPanel>


            <StackPanel Margin="0,0,0,357" Grid.Row="1">

                <StackPanel.Style>
                    <Style TargetType="StackPanel">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Enet}" Value="True">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Enet}" Value="False">
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </StackPanel.Style>

                <RadioButton 
                    Content="Home"
                    IsChecked="{Binding RadioButtonHomeENETIsChecked}"
                    Style="{StaticResource MenuButtonTheme}"
                    Command="{Binding HomeENETViewCommand}"/>

                <RadioButton 
                    Content="Boardinfo"
                    IsChecked="{Binding RadioButtonBoardinfoENETIsChecked}"
                    Style="{StaticResource MenuButtonTheme}"
                    Command="{Binding BoardinfoENETViewCommand}"/>

                <RadioButton 
                    Content="Test"
                    IsChecked="{Binding RadioButtonTestENETIsChecked}"
                    Style="{StaticResource MenuButtonTheme}"
                    Command="{Binding TestENETViewCommand}"/>

            </StackPanel>

            <StackPanel
                VerticalAlignment="Top"
                HorizontalAlignment="Center"
                Orientation="Horizontal"
                Margin="0,207,0,0" 
                Grid.Row="1">
                <Label
                    Margin="0,0,10,0"
                    Content="USB"
                    FontSize="18">
                    <Label.Style>
                        <Style TargetType="Label">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Enet}" Value="True">
                                    <Setter Property="Foreground" Value="#14AA00"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Enet}" Value="False">
                                    <Setter Property="Foreground" Value="White"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Label.Style>
                </Label>
                <ToggleButton
                    Style="{DynamicResource ToggleStyle}"
                    Content="USB/Ethernet"
                    Height="20" 
                    Cursor="Hand"
                    IsTabStop="False"
                    Command="{Binding HomeENETViewToggleCommand}"/>
                <Label
                    Margin="10,0,0,0"
                    Content="ENET"
                    FontSize="18">
                    <Label.Style>
                        <Style TargetType="Label">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Enet}" Value="False">
                                    <Setter Property="Foreground" Value="#14AA00"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Enet}" Value="True">
                                    <Setter Property="Foreground" Value="White"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Label.Style>
                </Label>
            </StackPanel>


            <Grid
                Margin="0,250,0,70" 
                Grid.Row="1"
                Visibility="{Binding Enet, Converter={StaticResource BooleanToVisibilityConverter}}">
                <ListView
                    Margin="10,10,10,0"
                    MinHeight="50"
                    VerticalAlignment="Top"
                    Background="Transparent"
                    Foreground="White"
                    ItemsSource="{Binding DeviceList}"
                    SelectedValuePath="Id"
                    SelectedValue="{Binding SelectedController}"
                    d:ItemsSource="{d:SampleData ItemCount=2}">
                    <ListView.Template>
                        <ControlTemplate>
                            <Border
                                CornerRadius="10"
                                BorderThickness="5"
                                BorderBrush="DarkSlateBlue">
                                <ScrollViewer
                                    HorizontalScrollBarVisibility="Disabled"
                                    VerticalScrollBarVisibility="Disabled">
                                    <ItemsPresenter/>
                                </ScrollViewer>
                            </Border>
                        </ControlTemplate>
                    </ListView.Template>
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="IsTabStop" Value="False"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ListViewItem">
                                        <ContentPresenter>
                                            <ContentPresenter.ContentTemplate>
                                                <DataTemplate>
                                                    <Viewbox StretchDirection="DownOnly" Margin="5">
                                                        <TextBlock FontSize="20" Cursor="Hand" MouseMove="ListViewItem_MouseMove" Text="{Binding BoardType}" ToolTip="{Binding SerialNumber}">
                                                            <TextBlock.Resources>
                                                                <Style TargetType="ToolTip">
                                                                    <Setter Property="Background" Value="Black"/>
                                                                    <Setter Property="Foreground" Value="White"/>
                                                                </Style>
                                                            </TextBlock.Resources>
                                                        </TextBlock>
                                                    </Viewbox>
                                                </DataTemplate>
                                            </ContentPresenter.ContentTemplate>
                                        </ContentPresenter>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Foreground" Value="#14AA00"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ListView.ItemContainerStyle>
                </ListView>
            </Grid>

            <Button
                Grid.Column="1"
                FontSize="20"
                Width="45"
                Margin="0,0,90,30"
                Content="🗕︎"
                Background="Transparent"
                Foreground="Gray"
                BorderThickness="0"
                HorizontalAlignment="Right"
                Cursor="Hand"
                IsTabStop="False"
                Click="ButtonMinimize_Click"
                mah:ControlsHelper.CornerRadius="0"
                mah:ControlsHelper.FocusBorderBrush="Transparent"/>

            <Button
                Grid.Column="1"
                FontSize="20"
                Width="45"
                Margin="0,0,45,30"
                Content="🗖︎"
                Background="Transparent"
                Foreground="Gray"
                BorderThickness="0"
                HorizontalAlignment="Right"
                Cursor="Hand"
                IsTabStop="False"
                Click="ButtonMaximized_Click"
                mah:ControlsHelper.CornerRadius="0"
                mah:ControlsHelper.FocusBorderBrush="Transparent">
            </Button>

            <Button
                Grid.Column="1"
                FontSize="20"
                Width="45"
                Margin="0,0,0,30"
                Content="🗙︎"
                Foreground="Gray"
                BorderThickness="0"
                HorizontalAlignment="Right"
                Click="ButtonClose_Click"
                Cursor="Hand"
                IsTabStop="False"
                Style="{StaticResource ButtonCloseTheme}"
                mah:ControlsHelper.FocusBorderBrush="Transparent"/>

            <ContentControl
                Content="{Binding CurrentView}"
                Grid.Row="1"
                Grid.Column="1"
                IsTabStop="False"/>

            <Grid Grid.Column="1" MouseDown="Grid_MouseDown">
                <Button
                Content="{Binding TotalControllers, NotifyOnTargetUpdated=True}"
                Command="{Binding RefreshDeviceListCommand}"
                IsEnabled="{Binding HomeUSBVM.IsUSBEnabled}"
                FontSize="18"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                Cursor="Hand"
                IsTabStop="False">
                    <Button.Resources>
                        <Style TargetType="Button">
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="Button">
                                        <Border
                                        Background="{TemplateBinding Background}">
                                            <ContentPresenter 
                                          Content="{TemplateBinding Content}"/>
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="CadetBlue"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Resources>
                    <Button.Visibility>
                        <Binding Converter="{StaticResource BooleanToVisibilityConverter}" Path="Enet"/>
                    </Button.Visibility>
                </Button>

                <Button
                Command="{Binding OpenProfileCreatorCommand}"
                mah:ControlsHelper.ContentCharacterCasing="Normal"
                Cursor="Hand"
                Visibility="Visible"
                Content="TestProfileCreator"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                FontSize="18"
                IsTabStop="False"/>

                <TextBlock
                Text="{Binding DIMVersion}"
                FontSize="18"
                Foreground="White"
                HorizontalAlignment="Right"
                VerticalAlignment="Center"
                Margin="0,0,200,0"/>

                <Ellipse 
                HorizontalAlignment="Center"
                Height="40" 
                Margin="0,0,330,0"
                StrokeThickness="4"
                Stroke="Gray"  
                Width="40">
                    <Ellipse.Style>
                        <Style TargetType="Ellipse">
                            <Setter Property="Fill" Value="Red"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsSimConnectOpen}" Value="True">
                                    <Setter Property="Fill" Value="Green"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Ellipse.Style>
                </Ellipse>
            </Grid>

            <Grid
                Grid.Row="1"
                Margin="0,0,0,10"
                HorizontalAlignment="Center"
                VerticalAlignment="Bottom" 
                Cursor="Hand"
                Height="50" >
                <Button 
                    x:Name="button"
                    BorderThickness="0"
                    Background="Transparent"
                    IsTabStop="False"
                    Command="{Binding SettingsViewCommand}">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="Button">
                                        <Grid Background="{TemplateBinding Background}">
                                            <ContentPresenter />
                                        </Grid>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Button.Style>
                    <Image
                        RenderOptions.BitmapScalingMode="HighQuality"
                        Source="pack://application:,,,/Images/settings-cog.png"
                        RenderTransformOrigin=".5,.5">
                        <Image.RenderTransform>
                            <RotateTransform Angle="0"/>
                        </Image.RenderTransform>
                        <Image.Style>
                            <Style TargetType="Image">
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding ElementName=button , Path=IsMouseOver}" Value="True"/>
                                            <Condition Binding="{Binding SettingsIsChecked}" Value="False"/>
                                        </MultiDataTrigger.Conditions>
                                        <MultiDataTrigger.EnterActions>
                                            <BeginStoryboard x:Name="RotateCog">
                                                <Storyboard>
                                                    <DoubleAnimation 
                                                        Storyboard.TargetProperty="RenderTransform.Angle"
                                                        To="360"
                                                        Duration="0:0:2"
                                                        RepeatBehavior="Forever"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </MultiDataTrigger.EnterActions>
                                        <MultiDataTrigger.ExitActions>
                                            <StopStoryboard BeginStoryboardName="RotateCog"/>
                                        </MultiDataTrigger.ExitActions>
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                </Button>
            </Grid>
        </Grid>
    </Border>
</Window>