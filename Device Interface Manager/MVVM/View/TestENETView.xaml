<UserControl x:Class="Device_Interface_Manager.MVVM.View.TestENETView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:viewmodel="clr-namespace:Device_Interface_Manager.MVVM.ViewModel"
             xmlns:local="clr-namespace:Device_Interface_Manager.Core"
             mc:Ignorable="d" 
             d:DataContext="{d:DesignInstance Type=viewmodel:TestENETViewModel}"
             d:DesignWidth="1040"
             d:DesignHeight="560"
             FontFamily="Unispace"
             FontSize="11">

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="650"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.Resources>
            <BooleanToVisibilityConverter x:Key="BoolToVis"/>
        </Grid.Resources>
        <StackPanel Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center">
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                <TextBlock Text="{Binding Counter}" Foreground="White" Margin="0,0,5,0" FontFamily="SergoUi" FontSize="22"/>
                <TextBlock Text="Inputs Received" Foreground="White" FontFamily="SergoUi" FontSize="22"/>
            </StackPanel>
            <Button Content="Reset" Command="{Binding ResetLabelsCommand}" Width="144" FontFamily="SergoUi" FontSize="12" Cursor="Hand" FontWeight="Bold" Margin="0,50,0,0" Height="30">
            </Button>
            <StackPanel Margin="40,150,0,0" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                <TextBlock Text="Airbus" VerticalAlignment="Center" Margin="0,0,10,0" FontSize="24" FontFamily="Helvetica Neue" FontWeight="Medium">
                    <TextBlock.Style>
                        <Style TargetType="TextBlock">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding AirbusBoeingIsChecked}" Value="False">
                                    <Setter Property="Foreground" Value="Green"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding AirbusBoeingIsChecked}" Value="True">
                                    <Setter Property="Foreground" Value="White"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
                <ToggleButton Content="Boeing" Command="{Binding SwitchAirbusBoeingCommand}" Cursor="Hand">
                    <ToggleButton.Style>
                        <Style TargetType="ToggleButton">
                            <Setter Property="MaxHeight" Value="30"/>
                            <Setter Property="MaxWidth" Value="60"/>
                            <Setter Property="MinHeight" Value="30"/>
                            <Setter Property="MinWidth" Value="60"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ToggleButton">
                                        <Border x:Name="bk" Background="#FFD1D1D1" CornerRadius="15">
                                            <Ellipse x:Name="ep" Fill="#1C1D2E" HorizontalAlignment="Right" Margin="4" Width="22"/>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <DataTrigger Binding="{Binding AirbusBoeingIsChecked}" Value="False">
                                                <Setter TargetName="ep" Property="HorizontalAlignment" Value="Left"/>
                                            </DataTrigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ToggleButton.Style>
                </ToggleButton>
                <TextBlock Text="BOEING" VerticalAlignment="Center" Margin="10,0,0,0" FontSize="16" FontFamily="{StaticResource BOEING}">
                    <TextBlock.Style>
                        <Style TargetType="TextBlock">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding AirbusBoeingIsChecked}" Value="True">
                                    <Setter Property="Foreground" Value="Green"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding AirbusBoeingIsChecked}" Value="False">
                                    <Setter Property="Foreground" Value="White"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
            </StackPanel>
        </StackPanel>
        <Border HorizontalAlignment="Right" VerticalAlignment="Center" Height="510" Width="340" CornerRadius="1">
            <Grid>
                <Grid x:Name="LEDs">
                    <ToggleButton x:Name="BoeingLED" IsChecked="{Binding IsChecked[0]}" Content="1" d:Visibility="Hidden" Visibility="{Binding AirbusBoeingIsChecked, Converter={StaticResource BoolToVis}}" HorizontalAlignment="Right"  VerticalAlignment="Bottom" Margin="0,0,55,220" Height="15" Width="27"/>
                    <DockPanel LastChildFill="False">
                        <StackPanel VerticalAlignment="Top" Margin="20,360,0,0" Width="20">
                            <ToggleButton IsChecked="{Binding IsChecked[1]}" Content="2" Height="35"/>
                            <ToggleButton IsChecked="{Binding IsChecked[2]}" Content="4" Height="35" Margin="0,10,0,0"/>
                        </StackPanel>
                        <StackPanel DockPanel.Dock="Right" VerticalAlignment="Top" Margin="0,360,20,0" Width="20">
                            <ToggleButton IsChecked="{Binding IsChecked[3]}" Content="3" Height="35"/>
                            <ToggleButton IsChecked="{Binding IsChecked[4]}" Content="5" Height="35" Margin="0,10,0,0"/>
                        </StackPanel>
                        <StackPanel x:Name="AirbusLEDs" d:Visibility="Visible" Orientation="Horizontal" DockPanel.Dock="Top" Height="15" Margin="0,15,0,0" HorizontalAlignment="Center">
                            <StackPanel.Style>
                                <Style TargetType="StackPanel">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding AirbusBoeingIsChecked}" Value="True">
                                            <Setter Property="Visibility" Value="Hidden"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </StackPanel.Style>
                            <ToggleButton IsChecked="{Binding IsChecked[5]}" Content="6"  Width="30"/>
                            <ToggleButton IsChecked="{Binding IsChecked[6]}" Content="7"  Width="30" Margin="5,0,0,0"/>
                            <ToggleButton IsChecked="{Binding IsChecked[7]}" Content="8"  Width="30" Margin="5,0,0,0"/>
                            <ToggleButton IsChecked="{Binding IsChecked[8]}" Content="9"  Width="30" Margin="5,0,0,0"/>
                            <ToggleButton IsChecked="{Binding IsChecked[9]}" Content="10" Width="30" Margin="5,0,0,0"/>
                        </StackPanel>
                    </DockPanel>
                    <Grid.Resources>
                        <local:ToggleButtonConverter x:Key="ToggleButtonConverter"/>
                        <Style TargetType="ToggleButton">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ToggleButton">
                                        <Border x:Name="border" BorderBrush="Orange" BorderThickness="1">
                                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter TargetName="border" Property="Background" Value="Orange"/>
                                                <Setter Property="Foreground" Value="Black"/>
                                            </Trigger>
                                            <Trigger Property="IsChecked" Value="True">
                                                <Setter TargetName="border" Property="Background" Value="Green"/>
                                                <Setter TargetName="border" Property="BorderBrush" Value="Green"/>
                                            </Trigger>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="IsChecked" Value="True"/>
                                                    <Condition Property="IsMouseOver" Value="True"/>
                                                </MultiTrigger.Conditions>
                                                <Setter Property="Foreground" Value="White"/>
                                            </MultiTrigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="CommandParameter">
                                <Setter.Value>
                                    <MultiBinding Converter="{StaticResource ToggleButtonConverter}">
                                        <Binding Path="IsChecked" RelativeSource="{RelativeSource Self}"/>
                                        <Binding Path="Content" RelativeSource="{RelativeSource Self}"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Command" Value="{Binding ButtonLEDCommand}"/>
                            <Setter Property="Width" Value="15"/>
                            <Setter Property="Foreground" Value="White"/>
                            <Setter Property="Cursor" Value="Hand"/>
                            <Style.Resources>
                                <Style TargetType="Border">
                                    <Setter Property="CornerRadius" Value="5"/>
                                </Style>
                            </Style.Resources>
                        </Style>
                    </Grid.Resources>
                </Grid>
                <StackPanel x:Name="BoeingButtons" d:Visibility="Hidden" Visibility="{Binding AirbusBoeingIsChecked, Converter={StaticResource BoolToVis}}" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="0,0,0,130">
                    <StackPanel>
                        <Label Width="28" Content="57"/>
                        <Label Width="28" Content="49"/>
                        <Label Width="28" Content="41"/>
                        <Label Width="28" Content="33"/>
                    </StackPanel>
                    <StackPanel>
                        <Label Width="28" Content="58"/>
                        <Label Width="28" Content="50"/>
                        <Label Width="28" Content="42"/>
                        <Label Width="28" Content="34"/>
                    </StackPanel>
                    <StackPanel VerticalAlignment="Top">
                        <Label Width="28" Content="60"/>
                        <Label Width="28" Content="52"/>
                    </StackPanel>
                    <StackPanel VerticalAlignment="Top">
                        <Label Width="28" Content="61"/>
                        <Label Width="28" Content="53"/>
                    </StackPanel>
                    <StackPanel VerticalAlignment="Top">
                        <Label Width="28" Content="62"/>
                        <Label Width="28" Content="54"/>
                    </StackPanel>
                    <Label Width="28" Content="55" Margin="15,-30,0,0"/>
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Top" Margin="-35,-10,0,0">
                        <Label Content="64" Height="15" Margin="0,5,0,5"/>
                        <Label Content="63" Height="15" Margin="0,5,0,5"/>
                    </StackPanel>
                </StackPanel>
                <StackPanel x:Name="AirbusButtons" d:Visibility="Visible" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="15,0,0,130">
                    <StackPanel.Style>
                        <Style TargetType="StackPanel">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding AirbusBoeingIsChecked}" Value="True">
                                    <Setter Property="Visibility" Value="Hidden"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>
                    <StackPanel>
                        <Label Width="28" Content="57"/>
                        <Label Width="28" Content="49" Margin="0,0,0,0"/>
                        <Label Width="28" Content="41"/>
                        <Label Width="28" Content="33" Margin="0,0,0,0"/>
                        <Label Width="28" Content="73"/>
                    </StackPanel>
                    <StackPanel>
                        <Label Width="28" Content="58"/>
                        <Label Width="28" Content="50" Margin="0,0,0,0"/>
                        <Label Width="28" Content="42"/>
                        <Label Width="28" Content="34" Margin="0,0,0,0"/>
                        <Label Width="28" Content="74"/>
                    </StackPanel>
                    <StackPanel VerticalAlignment="Top">
                        <Label Width="28" Content="60"/>
                        <Label Width="28" Content="52" Margin="0,0,0,0"/>
                    </StackPanel>
                    <StackPanel VerticalAlignment="Top">
                        <Label Width="28" Content="61"/>
                        <Label Width="28" Content="53" Margin="0,0,0,0"/>
                    </StackPanel>
                    <StackPanel VerticalAlignment="Top">
                        <Label Width="28" Content="62"/>
                        <Label Width="28" Content="54" Margin="0,0,0,0"/>
                    </StackPanel>
                    <StackPanel VerticalAlignment="Top">
                        <Label Width="28" Content="72"/>
                        <Label Width="28" Content="55" Margin="0,0,0,0"/>
                    </StackPanel>
                    <StackPanel Orientation="Vertical" VerticalAlignment="Top" Margin="5,10,0,0">
                        <Label Content="64" Height="15" Margin="0"/>
                        <Label Content="63" Height="15" Margin="0"/>
                    </StackPanel>
                </StackPanel>
                <StackPanel Orientation="Horizontal" VerticalAlignment="Bottom" HorizontalAlignment="Left" Margin="50,0,0,10">
                    <StackPanel>
                        <Label Style="{DynamicResource RoundLabel}">
                            <Grid>
                                <Ellipse/>
                                <TextBlock Text="25"/>
                            </Grid>
                        </Label>
                        <Label Style="{DynamicResource RoundLabel}">
                            <Grid>
                                <Ellipse/>
                                <TextBlock Text="17"/>
                            </Grid>
                        </Label>
                        <Label Style="{DynamicResource RoundLabel}">
                            <Grid>
                                <Ellipse/>
                                <TextBlock Text="9"/>
                            </Grid>
                        </Label>
                        <Label Style="{DynamicResource RoundLabel}">
                            <Grid>
                                <Ellipse/>
                                <TextBlock Text="1"/>
                            </Grid>
                        </Label>
                    </StackPanel>
                    <StackPanel>
                        <Label Style="{DynamicResource RoundLabel}">
                            <Grid>
                                <Ellipse/>
                                <TextBlock Text="26"/>
                            </Grid>
                        </Label>
                        <Label Style="{DynamicResource RoundLabel}">
                            <Grid>
                                <Ellipse/>
                                <TextBlock Text="18"/>
                            </Grid>
                        </Label>
                        <Label Style="{DynamicResource RoundLabel}">
                            <Grid>
                                <Ellipse/>
                                <TextBlock Text="10"/>
                            </Grid>
                        </Label>
                        <Label Style="{DynamicResource RoundLabel}">
                            <Grid>
                                <Ellipse/>
                                <TextBlock Text="2"/>
                            </Grid>
                        </Label>
                    </StackPanel>
                    <StackPanel>
                        <Label Style="{DynamicResource RoundLabel}">
                            <Grid>
                                <Ellipse/>
                                <TextBlock Text="27"/>
                            </Grid>
                        </Label>
                        <Label Style="{DynamicResource RoundLabel}">
                            <Grid>
                                <Ellipse/>
                                <TextBlock Text="19"/>
                            </Grid>
                        </Label>
                        <Label Style="{DynamicResource RoundLabel}">
                            <Grid>
                                <Ellipse/>
                                <TextBlock Text="11"/>
                            </Grid>
                        </Label>
                        <Label Style="{DynamicResource RoundLabel}">
                            <Grid>
                                <Ellipse/>
                                <TextBlock Text="3"/>
                            </Grid>
                        </Label>
                    </StackPanel>
                </StackPanel>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,250,50,10">
                    <StackPanel>
                        <Label Content="44"/>
                        <Label Content="36"/>
                        <Label Content="28"/>
                        <Label Content="20"/>
                        <Label Content="12"/>
                        <Label Content="4"/>
                    </StackPanel>
                    <StackPanel>
                        <Label Content="45"/>
                        <Label Content="37"/>
                        <Label Content="29"/>
                        <Label Content="21"/>
                        <Label Content="13"/>
                        <Label Content="5"/>
                    </StackPanel>
                    <StackPanel>
                        <Label Content="46"/>
                        <Label Content="38"/>
                        <Label Content="30"/>
                        <Label Content="22"/>
                        <Label Content="14"/>
                        <Label Content="6"/>
                    </StackPanel>
                    <StackPanel>
                        <Label Content="47"/>
                        <Label Content="39"/>
                        <Label Content="31"/>
                        <Label Content="23"/>
                        <Label Content="15"/>
                        <Label Content="7"/>
                    </StackPanel>
                    <StackPanel>
                        <Label Content="48"/>
                        <Label Content="40"/>
                        <Label Content="32"/>
                        <Label Content="24"/>
                        <Label Content="16"/>
                        <Label Content="8"/>
                    </StackPanel>
                </StackPanel>
                <StackPanel HorizontalAlignment="Left" Margin="0,0,0,290" VerticalAlignment="Bottom">
                    <Label Width="28" Height="15" Content="35"/>
                    <Label Width="28" Height="15" Content="43"/>
                    <Label Width="28" Height="15" Content="51"/>
                    <Label Width="28" Height="15" Content="59"/>
                    <Label Width="28" Height="15" Content="56"/>
                    <Label Width="28" Height="15" Content="71"/>
                </StackPanel>
                <StackPanel HorizontalAlignment="Right" Margin="0,0,0,290" VerticalAlignment="Bottom">
                    <Label Width="28" Height="15" Content="65"/>
                    <Label Width="28" Height="15" Content="66"/>
                    <Label Width="28" Height="15" Content="67"/>
                    <Label Width="28" Height="15" Content="68"/>
                    <Label Width="28" Height="15" Content="69"/>
                    <Label Width="28" Height="15" Content="70"/>
                </StackPanel>
                <Border Background="DarkGray" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="0,0,0,275" Height="190" Width="230" BorderBrush="Transparent">
                    <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Setter Property="Foreground" Value="#00205B"/>
                                <Setter Property="Text" Value="Airbus"/>
                                <Setter Property="FontFamily" Value="Helvetica Neue"/>
                                <Setter Property="FontSize" Value="65"/>
                                <Setter Property="FontWeight" Value="Medium"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding AirbusBoeingIsChecked}" Value="True">
                                        <Setter Property="Foreground" Value="#0033A1"/>
                                        <Setter Property="Text" Value="BOEING"/>
                                        <Setter Property="FontFamily" Value="{StaticResource BOEING}"/>
                                        <Setter Property="FontSize" Value="30"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </Border>
            </Grid>
        </Border>
    </Grid>

    <UserControl.Resources>
        <local:IntegerToColorConverter x:Key="IntegerToColorConverter"/>

        <Style TargetType="Label">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Height" Value="20"/>
            <Setter Property="Width" Value="20"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="White"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Background">
                <Setter.Value>
                    <MultiBinding Converter="{StaticResource IntegerToColorConverter}">
                        <Binding Path="Content" RelativeSource="{RelativeSource Self}"/>
                        <Binding Path="DataContext.States" RelativeSource="{RelativeSource AncestorType=UserControl}"/>
                    </MultiBinding>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="RoundLabel" TargetType="Label">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Margin" Value="1"/>
        </Style>

        <Style TargetType="Border">
            <Setter Property="CornerRadius" Value="10"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="White"/>
        </Style>

        <Style TargetType="Ellipse">
            <Setter Property="Stroke" Value="White"/>
            <Setter Property="Height" Value="18"/>
            <Setter Property="Width" Value="18"/>
            <Setter Property="Fill">
                <Setter.Value>
                    <MultiBinding Converter="{StaticResource IntegerToColorConverter}">
                        <Binding Path="Parent.Children[1].Text" RelativeSource="{RelativeSource Self}"/>
                        <Binding Path="DataContext.States" RelativeSource="{RelativeSource AncestorType=UserControl}"/>
                    </MultiBinding>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="TextBlock">
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>

        <Style TargetType="Grid">
            <Setter Property="Visibility" Value="Visible"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsConnected}" Value="false">
                    <Setter Property="Visibility" Value="Hidden"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
</UserControl>