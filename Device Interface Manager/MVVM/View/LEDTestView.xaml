<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:viewModel="clr-namespace:Device_Interface_Manager.MVVM.ViewModel"
             xmlns:local="clr-namespace:Device_Interface_Manager.MVVM.View" 
             x:Class="Device_Interface_Manager.MVVM.View.LEDTestView"
             d:DataContext="{d:DesignInstance IsDesignTimeCreatable=True, Type={x:Type viewModel:LEDTestViewModel}}"
             mc:Ignorable="d" 
             d:DesignWidth="1040"
             d:DesignHeight="560">

    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    </UserControl.Resources>


    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="5*"/>
            <ColumnDefinition Width="21*"/>
        </Grid.ColumnDefinitions>
        <Button 
            Command="{Binding LEDEnableCommand}"
            VerticalAlignment="Top" 
            HorizontalAlignment="Center" 
            Margin="0,255,0,0">
            <Button.Resources>
                <Style TargetType="Button">
                    <Style.Resources>
                        <Style TargetType="Border">
                            <Setter Property="CornerRadius" Value="10"/>
                        </Style>
                    </Style.Resources>
                    <Setter Property="Height" Value="40"/>
                    <Setter Property="Width" Value="150"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="FontSize" Value="23"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsEnabled}" Value="True">
                            <Setter Property="Background" Value="Green"/>
                            <Setter Property="Content" Value="Enabled"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsEnabled}" Value="False">
                            <Setter Property="Background" Value="DimGray"/>
                            <Setter Property="Content" Value="Disabled"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Resources>
        </Button>

        <DataGrid
            Grid.Column="1"
            ItemsSource="{Binding LED}"
            d:Visibility="Visible"
            Visibility="{Binding IsEnabled, Converter={StaticResource BooleanToVisibilityConverter}}"
            CanUserAddRows="False"
            CanUserDeleteRows="False"
            CanUserResizeColumns="False"
            IsReadOnly="False"
            Margin="10,70,0,10"
            Background="Transparent"
            Foreground="#FF152A7F"
            BorderBrush="#FF152A7F"
            BorderThickness="5"
            AutoGenerateColumns="False"
            HorizontalAlignment="Left"
            HorizontalGridLinesBrush="#FF152A7F"
            VerticalGridLinesBrush="#FF152A7F"
            HeadersVisibility="Column"
            VerticalScrollBarVisibility="Hidden"
            FontSize="22">

            <DataGrid.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="5,0,0,0"/>
                </Style>
                <Style TargetType="DataGridCell">
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="Foreground" Value="LimeGreen" />
                            <Setter Property="BorderBrush" Value="Transparent" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
                <Style TargetType="DataGridRow">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Foreground" Value="White"/>
                </Style>
                <Style TargetType="DataGridColumnHeader">
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                    <Setter Property="Foreground" Value="#FF152A7F"/>
                </Style>
            </DataGrid.Resources>

            <DataGrid.Columns>

                <DataGridTemplateColumn Header="Id" MinWidth="50" SortMemberPath="Id" >
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Id}" HorizontalAlignment="Center"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTextColumn Header="Name" MinWidth="200" Width="300" Binding="{Binding Name}">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="HorizontalAlignment" Value="Center"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                    <DataGridTextColumn.EditingElementStyle>
                        <Style TargetType="TextBox">
                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                        </Style>
                    </DataGridTextColumn.EditingElementStyle>
                </DataGridTextColumn>


                <DataGridTemplateColumn Header="Position" MinWidth="100" SortMemberPath="Position">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Position}" HorizontalAlignment="Center"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="On/Off" MinWidth="100">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <CheckBox 
                                IsChecked="{Binding IsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                CommandParameter="{Binding Position}"
                                Command="{Binding DataContext.IsCheckedCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:LEDTestView}}}">
                                <CheckBox.Resources>
                                    <Style TargetType="CheckBox">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="CheckBox">
                                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch" >
                                                        <Border BorderBrush="Transparent" Background="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Width="99" Height="29">
                                                            <Path Stretch="Uniform" 
                                                                  Width="30" 
                                                                  Height="20" 
                                                                  Fill="White" 
                                                                  Name="ThisCheck"
                                                                  Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z" 
                                                                  Visibility="Collapsed"/>
                                                        </Border>
                                                    </StackPanel>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsChecked" Value="True">
                                                            <Setter TargetName="ThisCheck" Property="Visibility" Value="Visible" />
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </CheckBox.Resources>
                            </CheckBox>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>



        <Grid
            HorizontalAlignment="Left"
            Width="50"
            d:Visibility="Visible"
            Visibility="{Binding IsEnabled, Converter={StaticResource BooleanToVisibilityConverter}}" 
            Margin="570,70,220,10" 
            Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <Button 
                BorderBrush="#FF152A7F"
                BorderThickness="0,5,5,2.5"
                Background="DarkGreen"
                Command="{Binding AllLEDOnOffCommand}"
                CommandParameter="On">
                <Button.Content>
                    <TextBlock 
                        Foreground="#FF152A7F" 
                        TextAlignment="Center"
                        FontWeight="Bold"
                        FontSize="18">
                    <TextBlock>
                        All<LineBreak/>
                        LEDs<LineBreak/>
                        On
                    </TextBlock>
                </TextBlock>
                </Button.Content>
                <Button.Resources>
                    <Style TargetType="Border">
                        <Setter Property="CornerRadius" Value="0,5,0,0"/>
                    </Style>
                </Button.Resources>
            </Button>
            <Button
                BorderBrush="#FF152A7F"
                BorderThickness="0,2.55,5,5"
                Background="DarkRed"
                Command="{Binding AllLEDOnOffCommand}" 
                CommandParameter="Off"
                Grid.Row="1">
                <Button.Content>
                    <TextBlock 
                        Foreground="#FF152A7F" 
                        TextAlignment="Center"
                        FontWeight="Bold"
                        FontSize="18">
                    <TextBlock>
                        All<LineBreak/>
                        LEDs<LineBreak/>
                        Off
                    </TextBlock>
                </TextBlock>
                </Button.Content>
                <Button.Resources>
                    <Style TargetType="Border">
                        <Setter Property="CornerRadius" Value="0,0,5,0"/>
                    </Style>
                </Button.Resources>
            </Button>
        </Grid>
    </Grid>
</UserControl>