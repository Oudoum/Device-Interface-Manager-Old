<UserControl
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:viewModel="clr-namespace:Device_Interface_Manager.MVVM.ViewModel"
    x:Class="Device_Interface_Manager.MVVM.View.LEDTestView"
    d:DataContext="{d:DesignInstance Type=viewModel:LEDTestViewModel, IsDesignTimeCreatable=True}"
    mc:Ignorable="d" 
    d:DesignWidth="1040"
    d:DesignHeight="560">

    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    </UserControl.Resources>


    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="5*"/>
            <ColumnDefinition Width="21*"/>
        </Grid.ColumnDefinitions>
        <Button 
            Command="{Binding LEDEnableCommand}"
            Cursor="Hand"
            FontSize="23"
            Width="150"
            VerticalAlignment="Center"
            IsTabStop="False">
            <Button.Resources>
                <Style TargetType="Button" BasedOn="{StaticResource MahApps.Styles.Button}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsEnabled}" Value="True">
                            <Setter Property="Background" Value="Green"/>
                            <Setter Property="Content" Value="Enabled"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsEnabled}" Value="False">
                            <Setter Property="Content" Value="Disabled"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Resources>
        </Button>

        <DockPanel 
            Margin="0,20,20,20"
            Grid.Column="1">
            <DataGrid
                ItemsSource="{Binding LEDs}"
                d:ItemsSource="{d:SampleData ItemCount=12}"
                d:Visibility="Visible"
                Visibility="{Binding IsEnabled, Converter={StaticResource BooleanToVisibilityConverter}}"
                AutoGenerateColumns="False"
                CanUserAddRows="False"
                CanUserDeleteRows="False"
                BorderThickness="5"
                GridLinesVisibility="All"
                HorizontalScrollBarVisibility="Disabled"
                FontSize="22">

                <DataGrid.Columns>
                    <DataGridTemplateColumn Header="Id" MinWidth="55" SortMemberPath="Id" CanUserResize="False" IsReadOnly="True">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Id}" HorizontalAlignment="Center"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                        <DataGridTemplateColumn.CellStyle>
                            <Style TargetType="DataGridCell">
                                <Setter Property="IsTabStop" Value="False"/>
                                <Style.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="Background" Value="Transparent"/>
                                        <Setter Property="Foreground" Value="White"/>
                                        <Setter Property="BorderBrush" Value="Transparent"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </DataGridTemplateColumn.CellStyle>
                    </DataGridTemplateColumn>

                    <DataGridTextColumn Header="Name" Binding="{Binding Name}" SortMemberPath="Name" CanUserResize="False">
                        <DataGridTextColumn.CellStyle>
                            <Style TargetType="DataGridCell">
                                <Setter Property="IsTabStop" Value="False"/>
                                <Style.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="Background" Value="Transparent"/>
                                        <Setter Property="Foreground" Value="White"/>
                                        <Setter Property="BorderBrush" Value="Transparent"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </DataGridTextColumn.CellStyle>
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="Margin" Value="3,1,3,1"/>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                        <DataGridTextColumn.EditingElementStyle>
                            <Style TargetType="TextBox">
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="Foreground" Value="White"/>
                                <Setter Property="CaretBrush" Value="White"/>
                            </Style>
                        </DataGridTextColumn.EditingElementStyle>
                    </DataGridTextColumn>


                    <DataGridTemplateColumn Header="Position" MinWidth="140" SortMemberPath="Position" CanUserResize="False" IsReadOnly="True">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Position}" HorizontalAlignment="Center"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                        <DataGridTemplateColumn.CellStyle>
                            <Style TargetType="DataGridCell">
                                <Setter Property="IsTabStop" Value="False"/>
                                <Style.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="Background" Value="Transparent"/>
                                        <Setter Property="Foreground" Value="White"/>
                                        <Setter Property="BorderBrush" Value="Transparent"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </DataGridTemplateColumn.CellStyle>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn Header="On/Off" MinWidth="115" SortMemberPath="IsChecked" CanUserResize="False" IsReadOnly="True">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <CheckBox
                                    Command="{Binding DataContext.IsCheckedCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=DataGrid}}"
                                    CommandParameter="{Binding Position}"
                                    IsChecked="{Binding IsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                    Cursor="Hand"
                                    IsTabStop="False">
                                    <CheckBox.Resources>
                                        <Style TargetType="CheckBox">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="CheckBox">
                                                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                                            <Border
                                                                BorderBrush="Gray"
                                                                Background="Transparent"
                                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                                Width="30"
                                                                Height="30">
                                                                <Path 
                                                                    Stretch="Uniform" 
                                                                    Width="30" 
                                                                    Height="20" 
                                                                    Fill="White" 
                                                                    Name="ThisCheck"
                                                                    Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z" 
                                                                    Visibility="Collapsed"/>
                                                            </Border>
                                                        </StackPanel>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsChecked" Value="True">
                                                                <Setter TargetName="ThisCheck" Property="Visibility" Value="Visible"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </CheckBox.Resources>
                                </CheckBox>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                        <DataGridTemplateColumn.CellStyle>
                            <Style TargetType="DataGridCell">
                                <Setter Property="IsTabStop" Value="False"/>
                                <Style.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="Background" Value="Transparent"/>
                                        <Setter Property="Foreground" Value="White"/>
                                        <Setter Property="BorderBrush" Value="Transparent"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </DataGridTemplateColumn.CellStyle>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>



            <Grid
                Visibility="{Binding IsEnabled, Converter={StaticResource BooleanToVisibilityConverter}}"
                d:Visibility="Visible"
                DockPanel.Dock="Right"
                HorizontalAlignment="Left"
                Width="50">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <Button
                    Command="{Binding AllLEDOnOffCommand}"
                    CommandParameter="On"
                    Background="DarkGreen"
                    Cursor="Hand"
                    IsTabStop="False">
                    <Button.Content>
                        <TextBlock 
                            TextAlignment="Center"
                            FontSize="16">
                            <TextBlock>
                            All<LineBreak/>
                            LEDs<LineBreak/>
                            On
                            </TextBlock>
                        </TextBlock>
                    </Button.Content>
                </Button>
                <Button
                    Command="{Binding AllLEDOnOffCommand}"
                    Background="DarkRed"
                    Cursor="Hand"
                    IsTabStop="False"
                    Grid.Row="1">
                    <Button.Content>
                        <TextBlock 
                            TextAlignment="Center"
                            FontSize="16">
                            <TextBlock>
                            All<LineBreak/>
                            LEDs<LineBreak/>
                            Off
                            </TextBlock>
                        </TextBlock>
                    </Button.Content>
                </Button>
            </Grid>
        </DockPanel>
    </Grid>
</UserControl>