<mah:MetroWindow
    x:Class="Device_Interface_Manager.MVVM.View.OutputCreatorView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:viewmodel="clr-namespace:Device_Interface_Manager.MVVM.ViewModel"
    xmlns:model="clr-namespace:Device_Interface_Manager.MVVM.Model"
    xmlns:core="clr-namespace:Device_Interface_Manager.Core"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
    d:DataContext="{d:DesignInstance Type=viewmodel:OutputCreatorViewModel}"
    WindowStartupLocation="CenterOwner"
    mc:Ignorable="d"
    Background="#1B1A24"
    Title="OutputCreator"
    Height="600"
    Width="800">

    <mah:MetroWindow.Resources>
        <core:StringToBooleanConverter x:Key="StringToBooleanConverter"/>
    </mah:MetroWindow.Resources>

    <Grid>

        <StackPanel HorizontalAlignment="Center" Width="400">

            <StackPanel  Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,25,0,0">
                <RadioButton Content="MSFS/SimConnect/LVar"
                             Background="Transparent"
                             Cursor="Hand"
                             IsChecked="{Binding Path=SelectedDataType, Mode=TwoWay, Converter={StaticResource StringToBooleanConverter}, ConverterParameter={x:Static model:ProfileCreatorModel.MSFSSimConnect}}"/>
                <RadioButton Content="PMDG737"
                             Background="Transparent"
                             Margin="25,0,0,0"
                             Cursor="Hand"
                             IsChecked="{Binding Path=SelectedDataType, Mode=TwoWay, Converter={StaticResource StringToBooleanConverter}, ConverterParameter={x:Static model:ProfileCreatorModel.PMDG737}}"/>
            </StackPanel>

            <Grid Margin="0,25,0,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="2*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <TextBlock Grid.Row="1" Text="LEDs" Foreground="White" VerticalAlignment="Center"/>
                <TextBlock Grid.Column="1" d:Text="TEST" Foreground="White" Margin="0,0,0,5" Text="{Binding SelectedLED}" HorizontalAlignment="Center"/>
                <ComboBox
                    Grid.Row="1"
                    Grid.Column="1"
                    mah:TextBoxHelper.ClearTextButton="True"
                    ItemsSource="{Binding LEDs}"
                    SelectedItem="{Binding SelectedLED, UpdateSourceTrigger=PropertyChanged}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding LEDComboBoxSlectionChangedCommand}" PassEventArgsToCommand="True"/>
                        </i:EventTrigger>
                        <i:EventTrigger EventName="MouseMove">
                            <i:InvokeCommandAction Command="{Binding MouseMoveLEDComboBoxCommand}" PassEventArgsToCommand="True"/>
                        </i:EventTrigger>
                        <i:EventTrigger EventName="MouseLeave">
                            <i:InvokeCommandAction Command="{Binding MouseLeaveLEDComboBoxCommand}" PassEventArgsToCommand="True"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <ComboBox.ItemContainerStyle>
                        <Style TargetType="ComboBoxItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                        </Style>
                    </ComboBox.ItemContainerStyle>
                </ComboBox>
            </Grid>

            <Grid d:Visibility="Visible" Margin="0,25,0,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="2*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <TextBlock Grid.Row="1" Text="PMDG Data" Foreground="White" VerticalAlignment="Center"/>
                <TextBlock Grid.Column="1" d:Text="TEST" Foreground="White" Margin="0,0,0,5" Text="{Binding PMDGDataFieldName}" HorizontalAlignment="Center"/>
                <ComboBox
                    Grid.Row="1"
                    Grid.Column="1"
                    IsEditable="True"
                    IsTextSearchEnabled="False"
                    mah:TextBoxHelper.ClearTextButton="True"
                    mah:TextBoxHelper.Watermark="Search..."
                    Text="{Binding SearchPMDGDataText, UpdateSourceTrigger=PropertyChanged}"
                    SelectedItem="{Binding PMDGDataFieldName, UpdateSourceTrigger=PropertyChanged}"
                    ItemsSource="{Binding PMDGDataFieldNames}"
                    VirtualizingPanel.IsVirtualizing="True">
                    <ComboBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel/>
                        </ItemsPanelTemplate>
                    </ComboBox.ItemsPanel>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="GotFocus">
                            <i:InvokeCommandAction Command="{Binding ComboboxMouseEnterLeaveCommand}" PassEventArgsToCommand="True"/>
                        </i:EventTrigger>
                        <i:EventTrigger EventName="LostFocus">
                            <i:InvokeCommandAction Command="{Binding ComboboxMouseEnterLeaveCommand}" PassEventArgsToCommand="True"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ComboBox>
                <Grid.Style>
                    <Style TargetType="Grid">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding SelectedDataType}" Value="PMDG737">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
            </Grid>

            <Grid d:Visibility="Visible" Margin="0,25,0,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="2*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <TextBlock Grid.Row="1" Text="PMDG Array Index" Foreground="White" VerticalAlignment="Center"/>
                <TextBlock Grid.Column="1" d:Text="TEST" Foreground="White" Margin="0,0,0,5" Text="{Binding PMDGStructArrayNum}" HorizontalAlignment="Center"/>
                <ComboBox
                    Grid.Row="1"
                    Grid.Column="1"
                    SelectedItem="{Binding PMDGStructArrayNum, UpdateSourceTrigger=PropertyChanged}"
                    ItemsSource="{Binding PMDGStructArrayNums}">
                </ComboBox>
                <Grid.Style>
                    <Style TargetType="Grid">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding SelectedDataType}" Value="PMDG737">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding PMDGStructArrayNum}" Value="{x:Null}">
                                <Setter Property="Visibility" Value="Hidden"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
            </Grid>

            <Grid d:Visibility="Visible" Margin="0,20,0,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="2*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Row="1" Text="Value" Foreground="White" VerticalAlignment="Center"/>
                <TextBox
                    Grid.Column="1"
                    Text="{Binding ComparisonValue, TargetNullValue='', UpdateSourceTrigger=PropertyChanged}"
                    mah:TextBoxHelper.Watermark="Value to check"
                    mah:TextBoxHelper.ClearTextButton="True">
                </TextBox>
                <Grid.Style>
                    <Style TargetType="Grid">
                        <Setter Property="Visibility" Value="Hidden"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsComparisonValueEnabled}" Value="True">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
            </Grid>

            <Grid d:Visibility="Visible" Margin="0,20,0,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="2*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Row="1" Text="Data" Foreground="White" VerticalAlignment="Center"/>
                <TextBox 
                    Grid.Column="1"
                    Text="{Binding Data, TargetNullValue='', UpdateSourceTrigger=PropertyChanged}"
                    mah:TextBoxHelper.Watermark="MSFS/SimConnect/LVar"
                    mah:TextBoxHelper.ClearTextButton="True">
                </TextBox>
                <Grid.Style>
                    <Style TargetType="Grid">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding SelectedDataType}" Value="MSFS/SimConnect/LVar">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
            </Grid>

            <Grid Margin="0,20,0,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="2*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Row="1" Text="Invert" Foreground="White" VerticalAlignment="Center"/>
                <CheckBox
                    Grid.Column="1"
                    IsChecked="{Binding IsInverted, UpdateSourceTrigger=PropertyChanged}" 
                    mah:CheckBoxHelper.CheckGlyphForegroundChecked="White"
                    mah:CheckBoxHelper.CheckGlyphForegroundCheckedPressed="Gray"
                    mah:CheckBoxHelper.CheckGlyphForegroundCheckedMouseOver="Gray">
                </CheckBox>
            </Grid>

        </StackPanel>

        <Button Content="OK" Command="{Binding OkCommand}" Margin="0,0,0,25" Width="100" VerticalAlignment="Bottom" Cursor="Hand"/>

    </Grid>
</mah:MetroWindow>